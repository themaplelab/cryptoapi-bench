package randoopTest;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        java.lang.Class<?> wildcardClass1 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        java.lang.Class<?> wildcardClass4 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        java.lang.Class<?> wildcardClass6 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        java.lang.Class<?> wildcardClass6 = charArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        java.lang.Class<?> wildcardClass23 = charArray18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass55 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass67 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        java.lang.Class<?> wildcardClass15 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_37.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_95 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray97 = new char[] { '4' };
        predictablePBEPasswordABICase1_95.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass57 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        java.lang.Class<?> wildcardClass11 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        java.lang.Class<?> wildcardClass37 = charArray31.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_37.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass95 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        java.lang.Class<?> wildcardClass64 = charArray56.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        java.lang.Class<?> wildcardClass58 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        java.lang.Class<?> wildcardClass44 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        java.lang.Class<?> wildcardClass37 = charArray34.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        java.lang.Class<?> wildcardClass10 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        java.lang.Class<?> wildcardClass11 = charArray7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        java.lang.Class<?> wildcardClass13 = charArray11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        java.lang.Class<?> wildcardClass23 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        java.lang.Class<?> wildcardClass4 = charArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass64 = charArray61.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        java.lang.Class<?> wildcardClass8 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        java.lang.Class<?> wildcardClass32 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        java.lang.Class<?> wildcardClass37 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_60.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass93 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        java.lang.Class<?> wildcardClass58 = charArray54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        java.lang.Class<?> wildcardClass37 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        java.lang.Class<?> wildcardClass32 = charArray26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_37.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        java.lang.Class<?> wildcardClass31 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_6.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_52.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        java.lang.Class<?> wildcardClass46 = charArray43.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass67 = charArray60.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass93 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_37.go(charArray63);
        char[] charArray72 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_37.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass75 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass55 = charArray49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_23.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_23.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray54 = null;
        predictablePBEPasswordABICase1_48.go(charArray54);
        char[] charArray60 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_48.go(charArray60);
        predictablePBEPasswordABICase1_17.go(charArray60);
        predictablePBEPasswordABICase1_6.go(charArray60);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_6.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_66.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_85.go(charArray92);
        predictablePBEPasswordABICase1_74.go(charArray92);
        predictablePBEPasswordABICase1_66.go(charArray92);
        predictablePBEPasswordABICase1_6.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass62 = charArray58.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_15.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_15.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        char[] charArray96 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = charArray96.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        java.lang.Class<?> wildcardClass44 = charArray37.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        java.lang.Class<?> wildcardClass38 = charArray35.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        java.lang.Class<?> wildcardClass14 = charArray12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        java.lang.Class<?> wildcardClass37 = charArray35.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        java.lang.Class<?> wildcardClass51 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        java.lang.Class<?> wildcardClass42 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass79 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_23.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        java.lang.Class<?> wildcardClass51 = charArray48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_17.go(charArray66);
        predictablePBEPasswordABICase1_6.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_6.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass86 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass54 = charArray49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_37.go(charArray63);
        char[] charArray72 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_37.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass75 = charArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray92 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_81.go(charArray92);
        predictablePBEPasswordABICase1_58.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass85 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray60 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass62 = charArray60.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_93 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray95 = new char[] { '4' };
        predictablePBEPasswordABICase1_93.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = charArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_6.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_52.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass66 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_56.go(charArray74);
        predictablePBEPasswordABICase1_43.go(charArray74);
        predictablePBEPasswordABICase1_37.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_93 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray95 = new char[] { '4' };
        predictablePBEPasswordABICase1_93.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        java.lang.Class<?> wildcardClass36 = charArray34.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_25.go(charArray75);
        predictablePBEPasswordABICase1_14.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_23.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass90 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_11.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray57 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass59 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray60 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_23.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray92 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_81.go(charArray92);
        predictablePBEPasswordABICase1_58.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass96 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass53 = charArray49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        char[] charArray18 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_6.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_20.go(charArray81);
        predictablePBEPasswordABICase1_6.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass66 = charArray60.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_56.go(charArray74);
        predictablePBEPasswordABICase1_43.go(charArray74);
        predictablePBEPasswordABICase1_37.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass82 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass54 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        java.lang.Class<?> wildcardClass37 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_58.go(charArray84);
        char[] charArray93 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_58.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        java.lang.Class<?> wildcardClass36 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        java.lang.Class<?> wildcardClass38 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_23.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass78 = charArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_58.go(charArray84);
        char[] charArray93 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_58.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass96 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_44.go(charArray50);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_44.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_54.go(charArray72);
        char[] charArray83 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray83);
        predictablePBEPasswordABICase1_44.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_86.go(charArray93);
        predictablePBEPasswordABICase1_44.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass60 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        java.lang.Class<?> wildcardClass41 = charArray39.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        java.lang.Class<?> wildcardClass41 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass58 = charArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        char[] charArray84 = new char[] { 'a', 'a', ' ', '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass56 = charArray50.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass61 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_23.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_23.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass71 = charArray64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        char[] charArray60 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_31.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        predictablePBEPasswordABICase1_11.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_48.go(charArray91);
        predictablePBEPasswordABICase1_11.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass56 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_14.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        char[] charArray53 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray53);
        predictablePBEPasswordABICase1_14.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_14.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_60.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass54 = charArray51.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_38.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        predictablePBEPasswordABICase1_38.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_38.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_22.go(charArray65);
        predictablePBEPasswordABICase1_11.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass70 = charArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_11.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = charArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        java.lang.Class<?> wildcardClass49 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass54 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass78 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_6.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_52.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray94 = new char[] { '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_15.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_15.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_22.go(charArray65);
        predictablePBEPasswordABICase1_11.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass70 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass53 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        java.lang.Class<?> wildcardClass57 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        java.lang.Class<?> wildcardClass49 = charArray45.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray54 = null;
        predictablePBEPasswordABICase1_48.go(charArray54);
        char[] charArray60 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_48.go(charArray60);
        predictablePBEPasswordABICase1_17.go(charArray60);
        predictablePBEPasswordABICase1_6.go(charArray60);
        char[] charArray66 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_6.go(charArray66);
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass69 = charArray66.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        java.lang.Class<?> wildcardClass46 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass61 = charArray57.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_56.go(charArray67);
        predictablePBEPasswordABICase1_33.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_33.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass89 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        char[] charArray18 = null;
        predictablePBEPasswordABICase1_12.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_12.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        predictablePBEPasswordABICase1_12.go(charArray73);
        predictablePBEPasswordABICase1_1.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass78 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_15.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_15.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass95 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_56.go(charArray67);
        predictablePBEPasswordABICase1_33.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_33.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        java.lang.Class<?> wildcardClass24 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_21.go(charArray75);
        predictablePBEPasswordABICase1_10.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass81 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass55 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_21.go(charArray75);
        predictablePBEPasswordABICase1_10.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass71 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        java.lang.Class<?> wildcardClass42 = charArray39.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        char[] charArray60 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_31.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass87 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_23.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_23.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        char[] charArray97 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_86.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass58 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_22.go(charArray53);
        predictablePBEPasswordABICase1_16.go(charArray53);
        predictablePBEPasswordABICase1_15.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        char[] charArray53 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_24.go(charArray73);
        predictablePBEPasswordABICase1_13.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_13.go(charArray87);
        char[] charArray97 = new char[] { 'a', 'a', ' ', '4', ' ' };
        predictablePBEPasswordABICase1_13.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        char[] charArray18 = null;
        predictablePBEPasswordABICase1_12.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_12.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        predictablePBEPasswordABICase1_12.go(charArray73);
        predictablePBEPasswordABICase1_1.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_15.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_15.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        char[] charArray96 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray57 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass59 = charArray57.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        predictablePBEPasswordABICase1_11.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_48.go(charArray91);
        predictablePBEPasswordABICase1_11.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        java.lang.Class<?> wildcardClass46 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        char[] charArray84 = new char[] { 'a', 'a', ' ', '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray42);
        predictablePBEPasswordABICase1_8.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray56 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray56);
        predictablePBEPasswordABICase1_8.go(charArray56);
        char[] charArray65 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_8.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_44.go(charArray50);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_44.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_54.go(charArray72);
        char[] charArray83 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray83);
        predictablePBEPasswordABICase1_44.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_86.go(charArray93);
        predictablePBEPasswordABICase1_44.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass99 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        java.lang.Class<?> wildcardClass51 = charArray48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        java.lang.Class<?> wildcardClass28 = charArray25.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_58.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass91 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_0.go(charArray31);
        java.lang.Class<?> wildcardClass33 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        char[] charArray18 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_6.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_20.go(charArray81);
        predictablePBEPasswordABICase1_6.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass91 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        java.lang.Class<?> wildcardClass25 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        java.lang.Class<?> wildcardClass14 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        java.lang.Class<?> wildcardClass31 = charArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass79 = charArray71.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass58 = charArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_37.go(charArray63);
        char[] charArray72 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_37.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass51 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass58 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        java.lang.Class<?> wildcardClass47 = charArray44.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        java.lang.Class<?> wildcardClass47 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray50 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_38.go(charArray50);
        predictablePBEPasswordABICase1_7.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_53.go(charArray88);
        predictablePBEPasswordABICase1_7.go(charArray88);
        predictablePBEPasswordABICase1_1.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        java.lang.Class<?> wildcardClass27 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        predictablePBEPasswordABICase1_32.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_17.go(charArray66);
        predictablePBEPasswordABICase1_6.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_6.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        java.lang.Class<?> wildcardClass28 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_51.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_51.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = charArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_15.go(charArray64);
        predictablePBEPasswordABICase1_4.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        predictablePBEPasswordABICase1_4.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass84 = charArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = charArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass60 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass53 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        java.lang.Class<?> wildcardClass46 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_27.go(charArray53);
        char[] charArray62 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_27.go(charArray62);
        predictablePBEPasswordABICase1_0.go(charArray62);
        java.lang.Class<?> wildcardClass65 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        java.lang.Class<?> wildcardClass13 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        char[] charArray63 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_6.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass66 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        char[] charArray63 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_6.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass66 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_14.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        char[] charArray53 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray53);
        predictablePBEPasswordABICase1_14.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_14.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass69 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        char[] charArray59 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_30.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_30.go(charArray79);
        predictablePBEPasswordABICase1_29.go(charArray79);
        predictablePBEPasswordABICase1_23.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass88 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        char[] charArray49 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        predictablePBEPasswordABICase1_20.go(charArray69);
        predictablePBEPasswordABICase1_19.go(charArray69);
        predictablePBEPasswordABICase1_8.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_8.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_10.go(charArray60);
        predictablePBEPasswordABICase1_4.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray79 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_68.go(charArray79);
        predictablePBEPasswordABICase1_4.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass60 = charArray57.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_70.go(charArray76);
        char[] charArray82 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_70.go(charArray82);
        predictablePBEPasswordABICase1_39.go(charArray82);
        predictablePBEPasswordABICase1_28.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass87 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass60 = charArray51.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass62 = charArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_28.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_28.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = charArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        char[] charArray58 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_1.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass61 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_0.go(charArray14);
        java.lang.Class<?> wildcardClass16 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_47.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass71 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_0.go(charArray27);
        java.lang.Class<?> wildcardClass29 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray50 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass52 = charArray50.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray84 = null;
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass53 = charArray49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_11.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        java.lang.Class<?> wildcardClass51 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_27.go(charArray53);
        char[] charArray62 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_27.go(charArray62);
        predictablePBEPasswordABICase1_0.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass67 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_70.go(charArray76);
        char[] charArray82 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_70.go(charArray82);
        predictablePBEPasswordABICase1_39.go(charArray82);
        predictablePBEPasswordABICase1_28.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        java.lang.Class<?> wildcardClass46 = charArray38.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_25.go(charArray75);
        predictablePBEPasswordABICase1_14.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass84 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass60 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_38.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        predictablePBEPasswordABICase1_38.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_38.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass88 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_10.go(charArray60);
        predictablePBEPasswordABICase1_4.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray79 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_68.go(charArray79);
        predictablePBEPasswordABICase1_4.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray83 = null;
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        char[] charArray82 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass85 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray57 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass61 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_37.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        char[] charArray81 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray81);
        predictablePBEPasswordABICase1_37.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_33.go(charArray39);
        char[] charArray45 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_33.go(charArray45);
        predictablePBEPasswordABICase1_10.go(charArray45);
        char[] charArray49 = new char[] { '#' };
        predictablePBEPasswordABICase1_10.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass52 = charArray49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        char[] charArray58 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_1.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass61 = charArray58.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_37.go(charArray63);
        char[] charArray72 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_37.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = charArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        char[] charArray82 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass67 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass59 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        char[] charArray79 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass81 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        predictablePBEPasswordABICase1_36.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_36.go(charArray84);
        char[] charArray93 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_36.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass96 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        predictablePBEPasswordABICase1_31.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass64 = charArray57.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        predictablePBEPasswordABICase1_36.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_36.go(charArray84);
        char[] charArray93 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_36.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_33.go(charArray39);
        char[] charArray45 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_33.go(charArray45);
        predictablePBEPasswordABICase1_10.go(charArray45);
        char[] charArray49 = new char[] { '#' };
        predictablePBEPasswordABICase1_10.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass52 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass56 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_47.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_10.go(charArray60);
        predictablePBEPasswordABICase1_4.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray79 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_68.go(charArray79);
        predictablePBEPasswordABICase1_4.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass83 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        char[] charArray61 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_49.go(charArray61);
        predictablePBEPasswordABICase1_26.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_26.go(charArray90);
        predictablePBEPasswordABICase1_15.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_37.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass63 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_58.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray50 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_38.go(charArray50);
        predictablePBEPasswordABICase1_7.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_53.go(charArray88);
        predictablePBEPasswordABICase1_7.go(charArray88);
        predictablePBEPasswordABICase1_1.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_28.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_28.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass69 = charArray61.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray57 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        char[] charArray49 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        predictablePBEPasswordABICase1_20.go(charArray69);
        predictablePBEPasswordABICase1_19.go(charArray69);
        predictablePBEPasswordABICase1_8.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_8.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass90 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        char[] charArray59 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_30.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_30.go(charArray79);
        predictablePBEPasswordABICase1_29.go(charArray79);
        predictablePBEPasswordABICase1_23.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass53 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        java.lang.Class<?> wildcardClass24 = charArray21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray53 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_41.go(charArray53);
        predictablePBEPasswordABICase1_28.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass57 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        char[] charArray33 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        char[] charArray47 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_35.go(charArray47);
        predictablePBEPasswordABICase1_4.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_50.go(charArray85);
        predictablePBEPasswordABICase1_4.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass90 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_6.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_6.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass70 = charArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_25.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass81 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        java.lang.Class<?> wildcardClass45 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_0.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray64 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray64);
        predictablePBEPasswordABICase1_30.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray78 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_67.go(charArray78);
        predictablePBEPasswordABICase1_30.go(charArray78);
        char[] charArray87 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_30.go(charArray87);
        predictablePBEPasswordABICase1_29.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_60.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_60.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_28.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_28.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray53 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_41.go(charArray53);
        predictablePBEPasswordABICase1_10.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_56.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_56.go(charArray91);
        predictablePBEPasswordABICase1_10.go(charArray91);
        predictablePBEPasswordABICase1_4.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_0.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray64 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray64);
        predictablePBEPasswordABICase1_30.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray78 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_67.go(charArray78);
        predictablePBEPasswordABICase1_30.go(charArray78);
        char[] charArray87 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_30.go(charArray87);
        predictablePBEPasswordABICase1_29.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray54 = null;
        predictablePBEPasswordABICase1_48.go(charArray54);
        char[] charArray60 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_48.go(charArray60);
        predictablePBEPasswordABICase1_17.go(charArray60);
        predictablePBEPasswordABICase1_6.go(charArray60);
        char[] charArray66 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_6.go(charArray66);
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        java.lang.Class<?> wildcardClass44 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_44.go(charArray75);
        predictablePBEPasswordABICase1_38.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass83 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_6.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_52.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray94 = new char[] { '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_32.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass70 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_58.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_43.go(charArray49);
        char[] charArray55 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_43.go(charArray55);
        predictablePBEPasswordABICase1_12.go(charArray55);
        predictablePBEPasswordABICase1_1.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray93 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_82.go(charArray93);
        predictablePBEPasswordABICase1_59.go(charArray93);
        predictablePBEPasswordABICase1_1.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_6.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_52.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray94 = new char[] { '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray94);
        char[] charArray96 = null;
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_15.go(charArray64);
        predictablePBEPasswordABICase1_4.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        predictablePBEPasswordABICase1_4.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_7.go(charArray13);
        char[] charArray19 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_7.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_33.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_21.go(charArray82);
        predictablePBEPasswordABICase1_7.go(charArray82);
        predictablePBEPasswordABICase1_1.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass93 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray28 = null;
        predictablePBEPasswordABICase1_22.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        predictablePBEPasswordABICase1_22.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_54.go(charArray72);
        char[] charArray83 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray83);
        predictablePBEPasswordABICase1_22.go(charArray83);
        predictablePBEPasswordABICase1_11.go(charArray83);
        predictablePBEPasswordABICase1_10.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray42);
        predictablePBEPasswordABICase1_8.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray56 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray56);
        predictablePBEPasswordABICase1_8.go(charArray56);
        char[] charArray65 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_8.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass68 = charArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        predictablePBEPasswordABICase1_31.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_43.go(charArray49);
        char[] charArray55 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_43.go(charArray55);
        predictablePBEPasswordABICase1_12.go(charArray55);
        predictablePBEPasswordABICase1_1.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray93 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_82.go(charArray93);
        predictablePBEPasswordABICase1_59.go(charArray93);
        predictablePBEPasswordABICase1_1.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass98 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_58.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass57 = charArray50.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        char[] charArray75 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass78 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray46);
        predictablePBEPasswordABICase1_12.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_12.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_12.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_12.go(charArray71);
        predictablePBEPasswordABICase1_6.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_81.go(charArray87);
        char[] charArray93 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_81.go(charArray93);
        predictablePBEPasswordABICase1_58.go(charArray93);
        char[] charArray97 = new char[] { '#' };
        predictablePBEPasswordABICase1_58.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray28 = null;
        predictablePBEPasswordABICase1_0.go(charArray28);
        java.lang.Class<?> wildcardClass30 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_6.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_6.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass70 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        char[] charArray70 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_36.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass73 = charArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray40 = null;
        predictablePBEPasswordABICase1_34.go(charArray40);
        char[] charArray46 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_34.go(charArray46);
        predictablePBEPasswordABICase1_11.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_49.go(charArray75);
        predictablePBEPasswordABICase1_11.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray26 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_14.go(charArray26);
        predictablePBEPasswordABICase1_1.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_29.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        predictablePBEPasswordABICase1_29.go(charArray73);
        predictablePBEPasswordABICase1_1.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray53 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_41.go(charArray53);
        predictablePBEPasswordABICase1_28.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass57 = charArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_60.go(charArray91);
        predictablePBEPasswordABICase1_54.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        char[] charArray33 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        char[] charArray47 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_35.go(charArray47);
        predictablePBEPasswordABICase1_4.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_50.go(charArray85);
        predictablePBEPasswordABICase1_4.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_84.go(charArray90);
        char[] charArray96 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_84.go(charArray96);
        predictablePBEPasswordABICase1_71.go(charArray96);
        predictablePBEPasswordABICase1_0.go(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_51.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_51.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_37.go(charArray63);
        char[] charArray72 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_37.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray83 = null;
        predictablePBEPasswordABICase1_75.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        char[] charArray96 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_85.go(charArray96);
        predictablePBEPasswordABICase1_75.go(charArray96);
        predictablePBEPasswordABICase1_0.go(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray46);
        predictablePBEPasswordABICase1_12.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_12.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_12.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_12.go(charArray71);
        predictablePBEPasswordABICase1_6.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass77 = charArray71.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray53 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_41.go(charArray53);
        predictablePBEPasswordABICase1_28.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass69 = charArray64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray57 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass97 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        predictablePBEPasswordABICase1_32.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass89 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_34.go(charArray83);
        predictablePBEPasswordABICase1_33.go(charArray83);
        predictablePBEPasswordABICase1_27.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass92 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass63 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray53 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_41.go(charArray53);
        predictablePBEPasswordABICase1_28.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass60 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass67 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_51.go(charArray77);
        predictablePBEPasswordABICase1_47.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass85 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        char[] charArray77 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_65.go(charArray77);
        predictablePBEPasswordABICase1_34.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_34.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass93 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_72.go(charArray78);
        char[] charArray84 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_72.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_72.go(charArray78);
        char[] charArray84 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_72.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass87 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray50 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_0.go(charArray52);
        java.lang.Class<?> wildcardClass54 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray57 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass59 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_27.go(charArray53);
        char[] charArray62 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_27.go(charArray62);
        predictablePBEPasswordABICase1_0.go(charArray62);
        java.lang.Class<?> wildcardClass65 = charArray62.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_45.go(charArray88);
        predictablePBEPasswordABICase1_34.go(charArray88);
        predictablePBEPasswordABICase1_23.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray53 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_41.go(charArray53);
        predictablePBEPasswordABICase1_28.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass59 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_60.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_60.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray80 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_69.go(charArray80);
        predictablePBEPasswordABICase1_46.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray94 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_83.go(charArray94);
        predictablePBEPasswordABICase1_46.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray88 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass63 = charArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        java.lang.Class<?> wildcardClass37 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_45.go(charArray88);
        predictablePBEPasswordABICase1_34.go(charArray88);
        predictablePBEPasswordABICase1_23.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        java.lang.Class<?> wildcardClass37 = charArray30.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_37.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass78 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_10.go(charArray60);
        predictablePBEPasswordABICase1_4.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray79 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_68.go(charArray79);
        predictablePBEPasswordABICase1_4.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray83 = null;
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_1.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        char[] charArray87 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray87);
        char[] charArray92 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_58.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass63 = charArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_25.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass90 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        char[] charArray75 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray88 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_51.go(charArray77);
        predictablePBEPasswordABICase1_47.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray80 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_69.go(charArray80);
        predictablePBEPasswordABICase1_58.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass75 = charArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray50 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass52 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        char[] charArray61 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_50.go(charArray81);
        predictablePBEPasswordABICase1_44.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass89 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_29.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        predictablePBEPasswordABICase1_29.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        predictablePBEPasswordABICase1_29.go(charArray78);
        predictablePBEPasswordABICase1_6.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        char[] charArray61 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_49.go(charArray61);
        predictablePBEPasswordABICase1_26.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_26.go(charArray90);
        predictablePBEPasswordABICase1_15.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass99 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray57 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_65.go(charArray91);
        predictablePBEPasswordABICase1_61.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass56 = charArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray80 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_69.go(charArray80);
        predictablePBEPasswordABICase1_46.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray94 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_83.go(charArray94);
        predictablePBEPasswordABICase1_46.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray57 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_65.go(charArray91);
        predictablePBEPasswordABICase1_61.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        char[] charArray33 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_4.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_11.go(charArray59);
        predictablePBEPasswordABICase1_10.go(charArray59);
        char[] charArray63 = null;
        predictablePBEPasswordABICase1_10.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_10.go(charArray67);
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass71 = charArray67.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_17.go(charArray66);
        predictablePBEPasswordABICase1_6.go(charArray66);
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass74 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_71.go(charArray89);
        predictablePBEPasswordABICase1_63.go(charArray89);
        predictablePBEPasswordABICase1_59.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass97 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        char[] charArray60 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_31.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_1.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        java.lang.Class<?> wildcardClass58 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_32.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass70 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        char[] charArray18 = null;
        predictablePBEPasswordABICase1_10.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        predictablePBEPasswordABICase1_32.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        char[] charArray93 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray93);
        predictablePBEPasswordABICase1_32.go(charArray93);
        predictablePBEPasswordABICase1_21.go(charArray93);
        predictablePBEPasswordABICase1_20.go(charArray93);
        predictablePBEPasswordABICase1_10.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray47 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray47);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_36.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        char[] charArray80 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_51.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_51.go(charArray94);
        predictablePBEPasswordABICase1_36.go(charArray94);
        predictablePBEPasswordABICase1_13.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_34.go(charArray83);
        predictablePBEPasswordABICase1_33.go(charArray83);
        predictablePBEPasswordABICase1_27.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_37.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        char[] charArray81 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray81);
        predictablePBEPasswordABICase1_37.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray26 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_14.go(charArray26);
        predictablePBEPasswordABICase1_1.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_29.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        predictablePBEPasswordABICase1_29.go(charArray73);
        predictablePBEPasswordABICase1_1.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass78 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_0.go(charArray67);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass71 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_43.go(charArray49);
        char[] charArray55 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_43.go(charArray55);
        predictablePBEPasswordABICase1_12.go(charArray55);
        predictablePBEPasswordABICase1_1.go(charArray55);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_1.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_61.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_61.go(charArray87);
        predictablePBEPasswordABICase1_1.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass95 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_51.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_51.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_91.go(charArray94);
        predictablePBEPasswordABICase1_87.go(charArray94);
        predictablePBEPasswordABICase1_76.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_38.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_38.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_0.go(charArray55);
        java.lang.Class<?> wildcardClass58 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        char[] charArray76 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray53 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_41.go(charArray53);
        predictablePBEPasswordABICase1_10.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_56.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_56.go(charArray91);
        predictablePBEPasswordABICase1_10.go(charArray91);
        predictablePBEPasswordABICase1_4.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass97 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_7.go(charArray13);
        char[] charArray19 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_7.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_33.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_21.go(charArray82);
        predictablePBEPasswordABICase1_7.go(charArray82);
        predictablePBEPasswordABICase1_1.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        char[] charArray59 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_30.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_30.go(charArray79);
        predictablePBEPasswordABICase1_19.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_86.go(charArray93);
        predictablePBEPasswordABICase1_19.go(charArray93);
        predictablePBEPasswordABICase1_15.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        char[] charArray76 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        char[] charArray77 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_65.go(charArray77);
        predictablePBEPasswordABICase1_34.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_34.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        java.lang.Class<?> wildcardClass44 = charArray37.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray41 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray41);
        java.lang.Class<?> wildcardClass43 = charArray41.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_37.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        char[] charArray81 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray81);
        predictablePBEPasswordABICase1_37.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_29.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        predictablePBEPasswordABICase1_29.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        predictablePBEPasswordABICase1_29.go(charArray78);
        predictablePBEPasswordABICase1_6.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_23.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        java.lang.Class<?> wildcardClass36 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass75 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_53.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass86 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_37.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass63 = charArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_23.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_22.go(charArray53);
        predictablePBEPasswordABICase1_16.go(charArray53);
        predictablePBEPasswordABICase1_15.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass62 = charArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        char[] charArray79 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        char[] charArray61 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_50.go(charArray81);
        predictablePBEPasswordABICase1_44.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_44.go(charArray75);
        predictablePBEPasswordABICase1_38.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_13.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_57.go(charArray88);
        predictablePBEPasswordABICase1_51.go(charArray88);
        predictablePBEPasswordABICase1_13.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_0.go(charArray55);
        java.lang.Class<?> wildcardClass58 = charArray55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        char[] charArray70 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_36.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_0.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_86.go(charArray93);
        predictablePBEPasswordABICase1_75.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass99 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_33.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        predictablePBEPasswordABICase1_33.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_33.go(charArray83);
        predictablePBEPasswordABICase1_10.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        char[] charArray70 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_41.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_72.go(charArray78);
        char[] charArray84 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_72.go(charArray84);
        predictablePBEPasswordABICase1_41.go(charArray84);
        predictablePBEPasswordABICase1_30.go(charArray84);
        char[] charArray90 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_30.go(charArray90);
        predictablePBEPasswordABICase1_24.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_58.go(charArray84);
        char[] charArray93 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_58.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        char[] charArray96 = null;
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        char[] charArray60 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_31.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_0.go(charArray89);
        char[] charArray91 = null;
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_43.go(charArray49);
        char[] charArray55 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_43.go(charArray55);
        predictablePBEPasswordABICase1_12.go(charArray55);
        predictablePBEPasswordABICase1_1.go(charArray55);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_1.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_61.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_61.go(charArray87);
        predictablePBEPasswordABICase1_1.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass66 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray67 = new char[] { ' ', 'a', ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_11.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_11.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        java.lang.Class<?> wildcardClass25 = charArray22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_11.go(charArray59);
        predictablePBEPasswordABICase1_10.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_10.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_37.go(charArray87);
        predictablePBEPasswordABICase1_31.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass96 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray88 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_54.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass92 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        char[] charArray74 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_62.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass77 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_11.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_11.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass68 = charArray64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass72 = charArray64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_37.go(charArray87);
        predictablePBEPasswordABICase1_31.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_13.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_13.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_40.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_40.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_40.go(charArray90);
        predictablePBEPasswordABICase1_13.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        java.lang.Class<?> wildcardClass43 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_0.go(charArray62);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        predictablePBEPasswordABICase1_34.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_34.go(charArray82);
        predictablePBEPasswordABICase1_33.go(charArray82);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_33.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_33.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_13.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_57.go(charArray88);
        predictablePBEPasswordABICase1_51.go(charArray88);
        predictablePBEPasswordABICase1_13.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass97 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_1.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        char[] charArray87 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray87);
        char[] charArray92 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_58.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass95 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_37.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_63.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass92 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        predictablePBEPasswordABICase1_34.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_34.go(charArray82);
        predictablePBEPasswordABICase1_33.go(charArray82);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_33.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_33.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_41.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        char[] charArray89 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_78.go(charArray89);
        predictablePBEPasswordABICase1_41.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray61 = null;
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass63 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_13.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_13.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_40.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_40.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_40.go(charArray90);
        predictablePBEPasswordABICase1_13.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass98 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_53.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass80 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_60.go(charArray91);
        predictablePBEPasswordABICase1_54.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        char[] charArray79 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass88 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        char[] charArray70 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_41.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_72.go(charArray78);
        char[] charArray84 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_72.go(charArray84);
        predictablePBEPasswordABICase1_41.go(charArray84);
        predictablePBEPasswordABICase1_30.go(charArray84);
        char[] charArray90 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_30.go(charArray90);
        predictablePBEPasswordABICase1_24.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        char[] charArray80 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_51.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_51.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray41 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray41);
        java.lang.Class<?> wildcardClass43 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        java.lang.Class<?> wildcardClass34 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        char[] charArray70 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_36.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_0.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_86.go(charArray93);
        predictablePBEPasswordABICase1_75.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass68 = charArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray30 = null;
        predictablePBEPasswordABICase1_24.go(charArray30);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_24.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        predictablePBEPasswordABICase1_24.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_24.go(charArray73);
        predictablePBEPasswordABICase1_1.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass80 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray28 = null;
        predictablePBEPasswordABICase1_22.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        predictablePBEPasswordABICase1_22.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_54.go(charArray72);
        char[] charArray83 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray83);
        predictablePBEPasswordABICase1_22.go(charArray83);
        predictablePBEPasswordABICase1_11.go(charArray83);
        predictablePBEPasswordABICase1_10.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass89 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_93 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray95 = new char[] { '4' };
        predictablePBEPasswordABICase1_93.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        char[] charArray98 = null;
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_45.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_91.go(charArray94);
        predictablePBEPasswordABICase1_45.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_54.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        char[] charArray40 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_6.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        predictablePBEPasswordABICase1_6.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_11.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_49.go(charArray75);
        predictablePBEPasswordABICase1_45.go(charArray75);
        predictablePBEPasswordABICase1_11.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass84 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray28 = null;
        predictablePBEPasswordABICase1_0.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        char[] charArray41 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_30.go(charArray41);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_30.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_45.go(charArray88);
        predictablePBEPasswordABICase1_30.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass93 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray80 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_69.go(charArray80);
        predictablePBEPasswordABICase1_58.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        char[] charArray70 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_36.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass73 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        char[] charArray79 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_17.go(charArray66);
        predictablePBEPasswordABICase1_6.go(charArray66);
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass74 = charArray66.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_11.go(charArray59);
        predictablePBEPasswordABICase1_10.go(charArray59);
        char[] charArray63 = null;
        predictablePBEPasswordABICase1_10.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_10.go(charArray67);
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass71 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray91 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_0.go(charArray47);
        java.lang.Class<?> wildcardClass49 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_1.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        java.lang.Class<?> wildcardClass58 = charArray54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_11.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_49.go(charArray75);
        predictablePBEPasswordABICase1_45.go(charArray75);
        predictablePBEPasswordABICase1_11.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        predictablePBEPasswordABICase1_31.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_64.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_64.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass63 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        java.lang.Class<?> wildcardClass57 = charArray54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass62 = charArray57.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_23.go(charArray84);
        predictablePBEPasswordABICase1_12.go(charArray84);
        predictablePBEPasswordABICase1_11.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray28 = null;
        predictablePBEPasswordABICase1_0.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        char[] charArray41 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_30.go(charArray41);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_30.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_45.go(charArray88);
        predictablePBEPasswordABICase1_30.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass79 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        char[] charArray40 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_6.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        predictablePBEPasswordABICase1_6.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass93 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray50 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_0.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_54.go(charArray60);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_54.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_54.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass79 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        char[] charArray79 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_81.go(charArray87);
        char[] charArray93 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_81.go(charArray93);
        predictablePBEPasswordABICase1_50.go(charArray93);
        predictablePBEPasswordABICase1_36.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass98 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_45.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_45.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_45.go(charArray90);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_94 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray96 = new char[] { '4' };
        predictablePBEPasswordABICase1_94.go(charArray96);
        predictablePBEPasswordABICase1_45.go(charArray96);
        predictablePBEPasswordABICase1_0.go(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_38.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_38.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray36 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_25.go(charArray36);
        predictablePBEPasswordABICase1_14.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_40.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        char[] charArray88 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_77.go(charArray88);
        predictablePBEPasswordABICase1_40.go(charArray88);
        predictablePBEPasswordABICase1_39.go(charArray88);
        predictablePBEPasswordABICase1_14.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        predictablePBEPasswordABICase1_36.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_36.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_36.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray91 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass93 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_38.go(charArray86);
        char[] charArray95 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_38.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = charArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_26.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_26.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_37.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_63.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_37.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        char[] charArray81 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray81);
        predictablePBEPasswordABICase1_37.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_76.go(charArray82);
        char[] charArray88 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_76.go(charArray88);
        predictablePBEPasswordABICase1_45.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_91.go(charArray94);
        predictablePBEPasswordABICase1_45.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_72.go(charArray78);
        char[] charArray84 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_72.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass55 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray88 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass95 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_26.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_26.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_11.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        char[] charArray79 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_44.go(charArray75);
        predictablePBEPasswordABICase1_38.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_83.go(charArray89);
        char[] charArray95 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_83.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = charArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray67 = new char[] { ' ', 'a', ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass69 = charArray67.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_42.go(charArray73);
        predictablePBEPasswordABICase1_10.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        java.lang.Class<?> wildcardClass45 = charArray41.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_7.go(charArray13);
        char[] charArray19 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_7.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_33.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_21.go(charArray82);
        predictablePBEPasswordABICase1_7.go(charArray82);
        predictablePBEPasswordABICase1_1.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_1.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass60 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        char[] charArray74 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_62.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_23.go(charArray84);
        predictablePBEPasswordABICase1_12.go(charArray84);
        predictablePBEPasswordABICase1_11.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass90 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        predictablePBEPasswordABICase1_9.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        predictablePBEPasswordABICase1_9.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        predictablePBEPasswordABICase1_9.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        predictablePBEPasswordABICase1_9.go(charArray57);
        predictablePBEPasswordABICase1_8.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_8.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass67 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_6.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        char[] charArray27 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray27);
        predictablePBEPasswordABICase1_6.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_30.go(charArray65);
        predictablePBEPasswordABICase1_6.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_6.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass82 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_23.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass80 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_14.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        char[] charArray53 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray53);
        predictablePBEPasswordABICase1_14.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_14.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass81 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        char[] charArray64 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_35.go(charArray84);
        predictablePBEPasswordABICase1_24.go(charArray84);
        predictablePBEPasswordABICase1_13.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass93 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_60.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass98 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_63.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_63.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass88 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray94 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_83.go(charArray94);
        predictablePBEPasswordABICase1_72.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray91 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray91);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        char[] charArray64 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_35.go(charArray84);
        predictablePBEPasswordABICase1_24.go(charArray84);
        predictablePBEPasswordABICase1_13.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_23.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_7.go(charArray13);
        char[] charArray19 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_7.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_33.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_21.go(charArray82);
        predictablePBEPasswordABICase1_7.go(charArray82);
        predictablePBEPasswordABICase1_1.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        char[] charArray95 = null;
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_38.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        predictablePBEPasswordABICase1_38.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_38.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_24.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        char[] charArray63 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        char[] charArray77 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_65.go(charArray77);
        predictablePBEPasswordABICase1_52.go(charArray77);
        predictablePBEPasswordABICase1_24.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_24.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_23.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        predictablePBEPasswordABICase1_9.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        predictablePBEPasswordABICase1_9.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        predictablePBEPasswordABICase1_9.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        predictablePBEPasswordABICase1_9.go(charArray57);
        predictablePBEPasswordABICase1_8.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_8.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass67 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_44.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        predictablePBEPasswordABICase1_44.go(charArray70);
        char[] charArray79 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_44.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass82 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_6.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_6.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass72 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_11.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_21.go(charArray32);
        predictablePBEPasswordABICase1_11.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray70 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_58.go(charArray70);
        predictablePBEPasswordABICase1_35.go(charArray70);
        predictablePBEPasswordABICase1_11.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass75 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_38.go(charArray86);
        char[] charArray95 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_38.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        java.lang.Class<?> wildcardClass3 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_71.go(charArray89);
        predictablePBEPasswordABICase1_63.go(charArray89);
        predictablePBEPasswordABICase1_59.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_85.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_14.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        char[] charArray53 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray53);
        predictablePBEPasswordABICase1_14.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_14.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        predictablePBEPasswordABICase1_21.go(charArray39);
        predictablePBEPasswordABICase1_13.go(charArray39);
        char[] charArray48 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_13.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_50.go(charArray85);
        char[] charArray89 = new char[] { '#' };
        predictablePBEPasswordABICase1_50.go(charArray89);
        predictablePBEPasswordABICase1_13.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_26.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_26.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass79 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_26.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_26.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        char[] charArray94 = null;
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }
}

