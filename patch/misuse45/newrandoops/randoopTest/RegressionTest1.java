package randoopTest;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray57 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass59 = charArray57.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        char[] charArray70 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_36.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_11.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_21.go(charArray32);
        predictablePBEPasswordABICase1_11.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray70 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_58.go(charArray70);
        predictablePBEPasswordABICase1_35.go(charArray70);
        predictablePBEPasswordABICase1_11.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass75 = charArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_44.go(charArray75);
        predictablePBEPasswordABICase1_38.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_83.go(charArray89);
        char[] charArray95 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_83.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray84 = null;
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass74 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        predictablePBEPasswordABICase1_34.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_34.go(charArray82);
        predictablePBEPasswordABICase1_33.go(charArray82);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_33.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_33.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray94 = null;
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        char[] charArray44 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_10.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        java.lang.Class<?> wildcardClass47 = charArray44.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        predictablePBEPasswordABICase1_36.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_33.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        predictablePBEPasswordABICase1_33.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_33.go(charArray83);
        predictablePBEPasswordABICase1_10.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass91 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        java.lang.Class<?> wildcardClass55 = charArray50.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray73 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_62.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_86.go(charArray93);
        predictablePBEPasswordABICase1_75.go(charArray93);
        predictablePBEPasswordABICase1_62.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        char[] charArray16 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_4.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_18.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        predictablePBEPasswordABICase1_38.go(charArray69);
        predictablePBEPasswordABICase1_32.go(charArray69);
        predictablePBEPasswordABICase1_31.go(charArray69);
        predictablePBEPasswordABICase1_18.go(charArray69);
        predictablePBEPasswordABICase1_4.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        predictablePBEPasswordABICase1_36.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_36.go(charArray84);
        char[] charArray93 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_36.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        char[] charArray96 = null;
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_0.go(charArray23);
        java.lang.Class<?> wildcardClass25 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        char[] charArray24 = null;
        predictablePBEPasswordABICase1_11.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        predictablePBEPasswordABICase1_11.go(charArray55);
        char[] charArray61 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_11.go(charArray61);
        char[] charArray63 = null;
        predictablePBEPasswordABICase1_11.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_65.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_65.go(charArray86);
        predictablePBEPasswordABICase1_11.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass91 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray50 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_0.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_54.go(charArray60);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_54.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_54.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray30 = null;
        predictablePBEPasswordABICase1_24.go(charArray30);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_24.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        predictablePBEPasswordABICase1_24.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_24.go(charArray73);
        predictablePBEPasswordABICase1_1.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_25.go(charArray75);
        predictablePBEPasswordABICase1_14.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        java.lang.Class<?> wildcardClass35 = charArray32.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_24.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        char[] charArray63 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        char[] charArray77 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_65.go(charArray77);
        predictablePBEPasswordABICase1_52.go(charArray77);
        predictablePBEPasswordABICase1_24.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_24.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        predictablePBEPasswordABICase1_31.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_64.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_64.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass89 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        predictablePBEPasswordABICase1_34.go(charArray65);
        predictablePBEPasswordABICase1_28.go(charArray65);
        predictablePBEPasswordABICase1_27.go(charArray65);
        predictablePBEPasswordABICase1_14.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass75 = charArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        char[] charArray70 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_36.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass75 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_6.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        char[] charArray27 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray27);
        predictablePBEPasswordABICase1_6.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_30.go(charArray65);
        predictablePBEPasswordABICase1_6.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_6.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_13.go(charArray24);
        char[] charArray26 = null;
        predictablePBEPasswordABICase1_13.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        char[] charArray57 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray57);
        predictablePBEPasswordABICase1_13.go(charArray57);
        char[] charArray63 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_13.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass66 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        char[] charArray71 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_37.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_37.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        predictablePBEPasswordABICase1_36.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass81 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_4.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_4.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_4.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_4.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_26.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        predictablePBEPasswordABICase1_26.go(charArray52);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_26.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_60.go(charArray90);
        predictablePBEPasswordABICase1_26.go(charArray90);
        predictablePBEPasswordABICase1_15.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        char[] charArray16 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_4.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        char[] charArray29 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_18.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        predictablePBEPasswordABICase1_38.go(charArray69);
        predictablePBEPasswordABICase1_32.go(charArray69);
        predictablePBEPasswordABICase1_31.go(charArray69);
        predictablePBEPasswordABICase1_18.go(charArray69);
        predictablePBEPasswordABICase1_4.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass80 = charArray69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        char[] charArray39 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_27.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        char[] charArray70 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_41.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_72.go(charArray78);
        char[] charArray84 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_72.go(charArray84);
        predictablePBEPasswordABICase1_41.go(charArray84);
        predictablePBEPasswordABICase1_27.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_27.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        char[] charArray60 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_31.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        char[] charArray79 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_81.go(charArray87);
        char[] charArray93 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_81.go(charArray93);
        predictablePBEPasswordABICase1_50.go(charArray93);
        predictablePBEPasswordABICase1_36.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        java.lang.Class<?> wildcardClass43 = charArray36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray36 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_25.go(charArray36);
        predictablePBEPasswordABICase1_14.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_40.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        char[] charArray88 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_77.go(charArray88);
        predictablePBEPasswordABICase1_40.go(charArray88);
        predictablePBEPasswordABICase1_39.go(charArray88);
        predictablePBEPasswordABICase1_14.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_27.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_27.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        char[] charArray84 = null;
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_27.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_27.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_29.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        predictablePBEPasswordABICase1_29.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        predictablePBEPasswordABICase1_29.go(charArray78);
        predictablePBEPasswordABICase1_6.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        char[] charArray91 = null;
        predictablePBEPasswordABICase1_85.go(charArray91);
        char[] charArray97 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_85.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        char[] charArray44 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_10.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        predictablePBEPasswordABICase1_32.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_32.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        char[] charArray94 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_32.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_41.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        char[] charArray89 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_78.go(charArray89);
        predictablePBEPasswordABICase1_41.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass74 = charArray69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_14.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        predictablePBEPasswordABICase1_25.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_25.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray73 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_62.go(charArray73);
        predictablePBEPasswordABICase1_25.go(charArray73);
        predictablePBEPasswordABICase1_24.go(charArray73);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_24.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_24.go(charArray81);
        predictablePBEPasswordABICase1_14.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        char[] charArray44 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_10.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass80 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_48.go(charArray91);
        predictablePBEPasswordABICase1_37.go(charArray91);
        char[] charArray97 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_37.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        char[] charArray95 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_84.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        char[] charArray33 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        char[] charArray47 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_35.go(charArray47);
        predictablePBEPasswordABICase1_4.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_50.go(charArray85);
        predictablePBEPasswordABICase1_4.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_22.go(charArray53);
        predictablePBEPasswordABICase1_16.go(charArray53);
        predictablePBEPasswordABICase1_15.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_62.go(charArray88);
        char[] charArray97 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_62.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        char[] charArray71 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_37.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_37.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray94 = new char[] { '#', 'a', 'a', '#', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_58.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_42.go(charArray73);
        predictablePBEPasswordABICase1_10.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass81 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray50 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_0.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_65.go(charArray91);
        predictablePBEPasswordABICase1_54.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray40 = null;
        predictablePBEPasswordABICase1_34.go(charArray40);
        char[] charArray46 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_34.go(charArray46);
        predictablePBEPasswordABICase1_11.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_49.go(charArray75);
        predictablePBEPasswordABICase1_11.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass83 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_21.go(charArray75);
        char[] charArray81 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_21.go(charArray81);
        predictablePBEPasswordABICase1_15.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        char[] charArray95 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_84.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = charArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_25.go(charArray75);
        predictablePBEPasswordABICase1_14.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray42);
        predictablePBEPasswordABICase1_8.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray56 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray56);
        predictablePBEPasswordABICase1_8.go(charArray56);
        char[] charArray65 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_8.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass92 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_3.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        predictablePBEPasswordABICase1_29.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        char[] charArray63 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray63);
        predictablePBEPasswordABICase1_29.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_29.go(charArray77);
        predictablePBEPasswordABICase1_28.go(charArray77);
        predictablePBEPasswordABICase1_3.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass83 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_26.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_26.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        predictablePBEPasswordABICase1_26.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_26.go(charArray86);
        predictablePBEPasswordABICase1_3.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        predictablePBEPasswordABICase1_37.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_37.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_37.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_28.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_28.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass53 = charArray49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_11.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_21.go(charArray32);
        predictablePBEPasswordABICase1_11.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray70 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_58.go(charArray70);
        predictablePBEPasswordABICase1_35.go(charArray70);
        predictablePBEPasswordABICase1_11.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_0.go(charArray75);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_4.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_4.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_4.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_4.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass80 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_37.go(charArray63);
        char[] charArray72 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_37.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray26 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_14.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        char[] charArray69 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_71.go(charArray89);
        predictablePBEPasswordABICase1_40.go(charArray89);
        predictablePBEPasswordABICase1_39.go(charArray89);
        predictablePBEPasswordABICase1_28.go(charArray89);
        predictablePBEPasswordABICase1_14.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass99 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        char[] charArray33 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_4.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass98 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray88 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_25.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        char[] charArray64 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray64);
        predictablePBEPasswordABICase1_25.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray24 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_13.go(charArray24);
        char[] charArray26 = null;
        predictablePBEPasswordABICase1_13.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        char[] charArray57 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray57);
        predictablePBEPasswordABICase1_13.go(charArray57);
        char[] charArray63 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_13.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass66 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_45.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        char[] charArray89 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_55.go(charArray89);
        predictablePBEPasswordABICase1_45.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        predictablePBEPasswordABICase1_34.go(charArray65);
        predictablePBEPasswordABICase1_28.go(charArray65);
        predictablePBEPasswordABICase1_27.go(charArray65);
        predictablePBEPasswordABICase1_14.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass75 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass66 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_38.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        predictablePBEPasswordABICase1_38.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_38.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_38.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_0.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray64 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray64);
        predictablePBEPasswordABICase1_30.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray78 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_67.go(charArray78);
        predictablePBEPasswordABICase1_30.go(charArray78);
        char[] charArray87 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_30.go(charArray87);
        predictablePBEPasswordABICase1_29.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray91 = null;
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        predictablePBEPasswordABICase1_23.go(charArray41);
        predictablePBEPasswordABICase1_10.go(charArray41);
        predictablePBEPasswordABICase1_4.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_54.go(charArray85);
        predictablePBEPasswordABICase1_48.go(charArray85);
        predictablePBEPasswordABICase1_4.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_0.go(charArray64);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray54 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray54);
        predictablePBEPasswordABICase1_32.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_32.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        char[] charArray94 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_32.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_0.go(charArray66);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_0.go(charArray68);
        java.lang.Class<?> wildcardClass70 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_0.go(charArray60);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray26 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_35.go(charArray66);
        predictablePBEPasswordABICase1_29.go(charArray66);
        predictablePBEPasswordABICase1_28.go(charArray66);
        predictablePBEPasswordABICase1_15.go(charArray66);
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_58.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray79 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_68.go(charArray79);
        predictablePBEPasswordABICase1_58.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        predictablePBEPasswordABICase1_23.go(charArray41);
        predictablePBEPasswordABICase1_10.go(charArray41);
        predictablePBEPasswordABICase1_4.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_54.go(charArray85);
        predictablePBEPasswordABICase1_48.go(charArray85);
        predictablePBEPasswordABICase1_4.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass94 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_29.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        predictablePBEPasswordABICase1_29.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        predictablePBEPasswordABICase1_29.go(charArray78);
        predictablePBEPasswordABICase1_6.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass85 = charArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_58.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass96 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_0.go(charArray41);
        java.lang.Class<?> wildcardClass43 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        char[] charArray24 = null;
        predictablePBEPasswordABICase1_11.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        predictablePBEPasswordABICase1_11.go(charArray55);
        char[] charArray61 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_11.go(charArray61);
        char[] charArray63 = null;
        predictablePBEPasswordABICase1_11.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_65.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_65.go(charArray86);
        predictablePBEPasswordABICase1_11.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        java.lang.Class<?> wildcardClass13 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        char[] charArray40 = null;
        predictablePBEPasswordABICase1_32.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        char[] charArray71 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray71);
        predictablePBEPasswordABICase1_32.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_74.go(charArray80);
        char[] charArray86 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_74.go(charArray86);
        predictablePBEPasswordABICase1_32.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass90 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        char[] charArray71 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_37.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_37.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass89 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_45.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_45.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_45.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass95 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_0.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_49.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        char[] charArray81 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray81);
        predictablePBEPasswordABICase1_49.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_37.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_41.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        char[] charArray89 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_78.go(charArray89);
        predictablePBEPasswordABICase1_41.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_45.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        char[] charArray89 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_55.go(charArray89);
        predictablePBEPasswordABICase1_45.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_37.go(charArray72);
        char[] charArray76 = new char[] { '#' };
        predictablePBEPasswordABICase1_37.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass62 = charArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_11.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_21.go(charArray32);
        predictablePBEPasswordABICase1_11.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray70 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_58.go(charArray70);
        predictablePBEPasswordABICase1_35.go(charArray70);
        predictablePBEPasswordABICase1_11.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        char[] charArray44 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_10.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        java.lang.Class<?> wildcardClass47 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        char[] charArray74 = new char[] { 'a', 'a', '#' };
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_14.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        predictablePBEPasswordABICase1_25.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_25.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray73 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_62.go(charArray73);
        predictablePBEPasswordABICase1_25.go(charArray73);
        predictablePBEPasswordABICase1_24.go(charArray73);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_24.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_24.go(charArray81);
        predictablePBEPasswordABICase1_14.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass86 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_85.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass97 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_21.go(charArray75);
        char[] charArray81 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_21.go(charArray81);
        predictablePBEPasswordABICase1_15.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass53 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass74 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray54 = null;
        predictablePBEPasswordABICase1_0.go(charArray54);
        java.lang.Class<?> wildcardClass56 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        predictablePBEPasswordABICase1_3.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_9.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        predictablePBEPasswordABICase1_9.go(charArray40);
        predictablePBEPasswordABICase1_3.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        char[] charArray82 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_47.go(charArray82);
        predictablePBEPasswordABICase1_3.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_63.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_63.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass66 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray21 = null;
        predictablePBEPasswordABICase1_15.go(charArray21);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_15.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_26.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_26.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_25.go(charArray80);
        predictablePBEPasswordABICase1_15.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_72.go(charArray83);
        predictablePBEPasswordABICase1_61.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_48.go(charArray79);
        predictablePBEPasswordABICase1_42.go(charArray79);
        predictablePBEPasswordABICase1_41.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_26.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_26.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass72 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        char[] charArray74 = new char[] { 'a', 'a', '#' };
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass76 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray42 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray42);
        predictablePBEPasswordABICase1_8.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray56 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray56);
        predictablePBEPasswordABICase1_8.go(charArray56);
        char[] charArray65 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_8.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_25.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        char[] charArray64 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray64);
        predictablePBEPasswordABICase1_25.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass80 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_22.go(charArray65);
        predictablePBEPasswordABICase1_11.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass72 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_8.go(charArray14);
        char[] charArray20 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_8.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray28 = null;
        predictablePBEPasswordABICase1_22.go(charArray28);
        char[] charArray30 = null;
        predictablePBEPasswordABICase1_22.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_56.go(charArray67);
        predictablePBEPasswordABICase1_33.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_33.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_32.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_32.go(charArray89);
        predictablePBEPasswordABICase1_22.go(charArray89);
        predictablePBEPasswordABICase1_8.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_60.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        java.lang.Class<?> wildcardClass35 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_26.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_26.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        predictablePBEPasswordABICase1_26.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_26.go(charArray86);
        predictablePBEPasswordABICase1_3.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray98 = new char[] { ' ', 'a', '#', '4' };
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray98);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_26.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_26.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        predictablePBEPasswordABICase1_26.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_26.go(charArray86);
        predictablePBEPasswordABICase1_3.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass94 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_3.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        predictablePBEPasswordABICase1_29.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        char[] charArray63 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray63);
        predictablePBEPasswordABICase1_29.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_29.go(charArray77);
        predictablePBEPasswordABICase1_28.go(charArray77);
        predictablePBEPasswordABICase1_3.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray47 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray47);
        predictablePBEPasswordABICase1_13.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        char[] charArray61 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray61);
        predictablePBEPasswordABICase1_13.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass65 = charArray61.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray57 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass61 = charArray58.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_48.go(charArray79);
        predictablePBEPasswordABICase1_42.go(charArray79);
        predictablePBEPasswordABICase1_41.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass60 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_37.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_42.go(charArray73);
        predictablePBEPasswordABICase1_36.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass81 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_0.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_29.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        predictablePBEPasswordABICase1_29.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass77 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray56 = null;
        predictablePBEPasswordABICase1_0.go(charArray56);
        java.lang.Class<?> wildcardClass58 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_37.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass96 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_45.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_45.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_45.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray75 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_64.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_11.go(charArray59);
        predictablePBEPasswordABICase1_10.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_10.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass69 = charArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        char[] charArray18 = null;
        predictablePBEPasswordABICase1_12.go(charArray18);
        char[] charArray24 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_12.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray37 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_46.go(charArray77);
        predictablePBEPasswordABICase1_40.go(charArray77);
        predictablePBEPasswordABICase1_39.go(charArray77);
        predictablePBEPasswordABICase1_26.go(charArray77);
        predictablePBEPasswordABICase1_12.go(charArray77);
        predictablePBEPasswordABICase1_8.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass89 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_13.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_57.go(charArray88);
        predictablePBEPasswordABICase1_51.go(charArray88);
        predictablePBEPasswordABICase1_13.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray97 = null;
        predictablePBEPasswordABICase1_0.go(charArray97);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_34.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray94 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_83.go(charArray94);
        predictablePBEPasswordABICase1_72.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_49.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        char[] charArray88 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray88);
        predictablePBEPasswordABICase1_49.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_91.go(charArray94);
        predictablePBEPasswordABICase1_49.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass61 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_4.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_4.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_4.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_4.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray64 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_53.go(charArray84);
        predictablePBEPasswordABICase1_47.go(charArray84);
        predictablePBEPasswordABICase1_46.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_93 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray95 = new char[] { '4' };
        predictablePBEPasswordABICase1_93.go(charArray95);
        predictablePBEPasswordABICase1_92.go(charArray95);
        predictablePBEPasswordABICase1_46.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_44.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        predictablePBEPasswordABICase1_44.go(charArray70);
        char[] charArray79 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_44.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray26 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray46 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_35.go(charArray66);
        predictablePBEPasswordABICase1_29.go(charArray66);
        predictablePBEPasswordABICase1_28.go(charArray66);
        predictablePBEPasswordABICase1_15.go(charArray66);
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass76 = charArray66.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_60.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray57 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        char[] charArray70 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_36.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass85 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray50 = new char[] { '#', ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_0.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_65.go(charArray91);
        predictablePBEPasswordABICase1_54.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_21.go(charArray81);
        predictablePBEPasswordABICase1_10.go(charArray81);
        char[] charArray89 = new char[] {};
        predictablePBEPasswordABICase1_10.go(charArray89);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_91.go(charArray94);
        predictablePBEPasswordABICase1_10.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        predictablePBEPasswordABICase1_31.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_8.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        char[] charArray18 = null;
        predictablePBEPasswordABICase1_12.go(charArray18);
        char[] charArray24 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_12.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray37 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_46.go(charArray77);
        predictablePBEPasswordABICase1_40.go(charArray77);
        predictablePBEPasswordABICase1_39.go(charArray77);
        predictablePBEPasswordABICase1_26.go(charArray77);
        predictablePBEPasswordABICase1_12.go(charArray77);
        predictablePBEPasswordABICase1_8.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        char[] charArray79 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_81.go(charArray87);
        char[] charArray93 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_81.go(charArray93);
        predictablePBEPasswordABICase1_50.go(charArray93);
        predictablePBEPasswordABICase1_36.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        char[] charArray98 = null;
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        char[] charArray58 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_1.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_0.go(charArray68);
        java.lang.Class<?> wildcardClass73 = charArray68.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        predictablePBEPasswordABICase1_25.go(charArray43);
        char[] charArray54 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_25.go(charArray54);
        char[] charArray59 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_25.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_0.go(charArray62);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_48.go(charArray79);
        predictablePBEPasswordABICase1_42.go(charArray79);
        predictablePBEPasswordABICase1_41.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass88 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        char[] charArray80 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_51.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_51.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_58.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray79 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_68.go(charArray79);
        predictablePBEPasswordABICase1_58.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass83 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_62.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_72.go(charArray83);
        predictablePBEPasswordABICase1_62.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_49.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        char[] charArray88 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray88);
        predictablePBEPasswordABICase1_49.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_91.go(charArray94);
        predictablePBEPasswordABICase1_49.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        char[] charArray40 = null;
        predictablePBEPasswordABICase1_32.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        char[] charArray71 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray71);
        predictablePBEPasswordABICase1_32.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_74.go(charArray80);
        char[] charArray86 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_74.go(charArray86);
        predictablePBEPasswordABICase1_32.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_3.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_28.go(charArray34);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_28.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        predictablePBEPasswordABICase1_28.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_28.go(charArray77);
        predictablePBEPasswordABICase1_3.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass84 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        predictablePBEPasswordABICase1_36.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_36.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_36.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_66.go(charArray72);
        char[] charArray78 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_66.go(charArray78);
        predictablePBEPasswordABICase1_43.go(charArray78);
        char[] charArray84 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_43.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        char[] charArray69 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_71.go(charArray89);
        predictablePBEPasswordABICase1_40.go(charArray89);
        predictablePBEPasswordABICase1_39.go(charArray89);
        predictablePBEPasswordABICase1_33.go(charArray89);
        predictablePBEPasswordABICase1_10.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_21.go(charArray81);
        predictablePBEPasswordABICase1_10.go(charArray81);
        char[] charArray89 = new char[] {};
        predictablePBEPasswordABICase1_10.go(charArray89);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_91.go(charArray94);
        predictablePBEPasswordABICase1_10.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_60.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_60.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass59 = charArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_0.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray40 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray40);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_29.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        predictablePBEPasswordABICase1_29.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_11.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        char[] charArray37 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_3.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray73 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_62.go(charArray73);
        predictablePBEPasswordABICase1_39.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        char[] charArray87 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_76.go(charArray87);
        predictablePBEPasswordABICase1_39.go(charArray87);
        char[] charArray96 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_39.go(charArray96);
        predictablePBEPasswordABICase1_3.go(charArray96);
        predictablePBEPasswordABICase1_0.go(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_15.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_15.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        char[] charArray95 = null;
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_51.go(charArray77);
        predictablePBEPasswordABICase1_47.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_45.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_45.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_45.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray95 = null;
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_60.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass98 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass91 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_36.go(charArray85);
        predictablePBEPasswordABICase1_35.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        char[] charArray71 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_37.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_37.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray94 = new char[] { '#', 'a', 'a', '#', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_41.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        char[] charArray80 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_51.go(charArray80);
        char[] charArray85 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_51.go(charArray85);
        predictablePBEPasswordABICase1_41.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        char[] charArray33 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_35.go(charArray61);
        predictablePBEPasswordABICase1_4.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_68.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        char[] charArray89 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_78.go(charArray89);
        predictablePBEPasswordABICase1_68.go(charArray89);
        predictablePBEPasswordABICase1_4.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        predictablePBEPasswordABICase1_3.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_9.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        predictablePBEPasswordABICase1_9.go(charArray40);
        predictablePBEPasswordABICase1_3.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        char[] charArray82 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_47.go(charArray82);
        predictablePBEPasswordABICase1_3.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass86 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        predictablePBEPasswordABICase1_34.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_34.go(charArray82);
        char[] charArray91 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_34.go(charArray91);
        predictablePBEPasswordABICase1_33.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_6.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_52.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        java.lang.Class<?> wildcardClass59 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray56 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        predictablePBEPasswordABICase1_45.go(charArray76);
        predictablePBEPasswordABICase1_39.go(charArray76);
        predictablePBEPasswordABICase1_38.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_13.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_13.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_40.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        predictablePBEPasswordABICase1_40.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_40.go(charArray90);
        predictablePBEPasswordABICase1_13.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray98 = null;
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        char[] charArray68 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_57.go(charArray68);
        predictablePBEPasswordABICase1_34.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_34.go(charArray82);
        char[] charArray91 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_34.go(charArray91);
        predictablePBEPasswordABICase1_33.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        char[] charArray65 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_53.go(charArray65);
        predictablePBEPasswordABICase1_22.go(charArray65);
        predictablePBEPasswordABICase1_11.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_0.go(charArray70);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass74 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_14.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_29.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_40.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        char[] charArray88 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_77.go(charArray88);
        predictablePBEPasswordABICase1_40.go(charArray88);
        predictablePBEPasswordABICase1_39.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_92 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray94 = new char[] { '4' };
        predictablePBEPasswordABICase1_92.go(charArray94);
        predictablePBEPasswordABICase1_39.go(charArray94);
        predictablePBEPasswordABICase1_29.go(charArray94);
        predictablePBEPasswordABICase1_14.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_38.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        predictablePBEPasswordABICase1_38.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_38.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_38.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass97 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_55.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_11.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray56 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        predictablePBEPasswordABICase1_45.go(charArray76);
        predictablePBEPasswordABICase1_39.go(charArray76);
        predictablePBEPasswordABICase1_38.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_1.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        predictablePBEPasswordABICase1_16.go(charArray34);
        char[] charArray45 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray45);
        predictablePBEPasswordABICase1_1.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        java.lang.Class<?> wildcardClass49 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        char[] charArray58 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_1.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_0.go(charArray68);
        java.lang.Class<?> wildcardClass73 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        predictablePBEPasswordABICase1_36.go(charArray62);
        predictablePBEPasswordABICase1_32.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_69.go(charArray91);
        predictablePBEPasswordABICase1_32.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_60.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_60.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_11.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_37.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray26 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_14.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        char[] charArray69 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_71.go(charArray89);
        predictablePBEPasswordABICase1_40.go(charArray89);
        predictablePBEPasswordABICase1_39.go(charArray89);
        predictablePBEPasswordABICase1_28.go(charArray89);
        predictablePBEPasswordABICase1_14.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_41.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        char[] charArray80 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_51.go(charArray80);
        char[] charArray85 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_51.go(charArray85);
        predictablePBEPasswordABICase1_41.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass89 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        char[] charArray33 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_35.go(charArray61);
        predictablePBEPasswordABICase1_4.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_68.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        char[] charArray89 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_78.go(charArray89);
        predictablePBEPasswordABICase1_68.go(charArray89);
        predictablePBEPasswordABICase1_4.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass94 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_0.go(charArray55);
        java.lang.Class<?> wildcardClass57 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_67.go(charArray73);
        char[] charArray79 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_67.go(charArray79);
        predictablePBEPasswordABICase1_36.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_48.go(charArray79);
        predictablePBEPasswordABICase1_42.go(charArray79);
        predictablePBEPasswordABICase1_41.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        char[] charArray23 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_11.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_25.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        char[] charArray64 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray64);
        predictablePBEPasswordABICase1_25.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_11.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        char[] charArray61 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_50.go(charArray81);
        predictablePBEPasswordABICase1_44.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_60.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        char[] charArray98 = null;
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_66.go(charArray72);
        char[] charArray78 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_66.go(charArray78);
        predictablePBEPasswordABICase1_43.go(charArray78);
        char[] charArray84 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_43.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray47 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_56.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_56.go(charArray87);
        predictablePBEPasswordABICase1_50.go(charArray87);
        predictablePBEPasswordABICase1_49.go(charArray87);
        predictablePBEPasswordABICase1_36.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_1.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        predictablePBEPasswordABICase1_16.go(charArray34);
        char[] charArray45 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray45);
        predictablePBEPasswordABICase1_1.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        java.lang.Class<?> wildcardClass49 = charArray45.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_60.go(charArray91);
        predictablePBEPasswordABICase1_54.go(charArray91);
        predictablePBEPasswordABICase1_53.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_63.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_63.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray84 = null;
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        char[] charArray79 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_81.go(charArray87);
        char[] charArray93 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_81.go(charArray93);
        predictablePBEPasswordABICase1_50.go(charArray93);
        predictablePBEPasswordABICase1_39.go(charArray93);
        predictablePBEPasswordABICase1_28.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_0.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_25.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray70 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_58.go(charArray70);
        predictablePBEPasswordABICase1_35.go(charArray70);
        char[] charArray74 = new char[] { '#' };
        predictablePBEPasswordABICase1_35.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_62.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_72.go(charArray83);
        predictablePBEPasswordABICase1_62.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_63.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_63.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        char[] charArray76 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_64.go(charArray76);
        predictablePBEPasswordABICase1_33.go(charArray76);
        predictablePBEPasswordABICase1_22.go(charArray76);
        predictablePBEPasswordABICase1_11.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass82 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        char[] charArray37 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray37);
        char[] charArray42 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_8.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        char[] charArray78 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_44.go(charArray78);
        predictablePBEPasswordABICase1_8.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_8.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        char[] charArray40 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_6.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_6.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_6.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        predictablePBEPasswordABICase1_6.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        char[] charArray18 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_6.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        char[] charArray49 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_20.go(charArray63);
        predictablePBEPasswordABICase1_6.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_37.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        char[] charArray81 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray81);
        predictablePBEPasswordABICase1_37.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        char[] charArray79 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_81.go(charArray87);
        char[] charArray93 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_81.go(charArray93);
        predictablePBEPasswordABICase1_50.go(charArray93);
        predictablePBEPasswordABICase1_39.go(charArray93);
        predictablePBEPasswordABICase1_28.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass99 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        predictablePBEPasswordABICase1_32.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray91 = new char[] { '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        char[] charArray55 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_26.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_26.go(charArray75);
        predictablePBEPasswordABICase1_15.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_15.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        char[] charArray96 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray96);
        char[] charArray98 = null;
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_56.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        char[] charArray88 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray88);
        predictablePBEPasswordABICase1_56.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        char[] charArray39 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_27.go(charArray39);
        predictablePBEPasswordABICase1_4.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        java.lang.Class<?> wildcardClass43 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_56.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        char[] charArray88 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray88);
        predictablePBEPasswordABICase1_56.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass92 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_1.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        predictablePBEPasswordABICase1_16.go(charArray34);
        char[] charArray45 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray45);
        predictablePBEPasswordABICase1_1.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_49.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_72.go(charArray83);
        predictablePBEPasswordABICase1_49.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass61 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray45 = null;
        predictablePBEPasswordABICase1_37.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_70.go(charArray76);
        char[] charArray82 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_70.go(charArray82);
        predictablePBEPasswordABICase1_47.go(charArray82);
        char[] charArray86 = new char[] { '#' };
        predictablePBEPasswordABICase1_47.go(charArray86);
        predictablePBEPasswordABICase1_37.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass90 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_4.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_4.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_4.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_4.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray21 = null;
        predictablePBEPasswordABICase1_15.go(charArray21);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_15.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        predictablePBEPasswordABICase1_26.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        predictablePBEPasswordABICase1_26.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_26.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_25.go(charArray80);
        predictablePBEPasswordABICase1_15.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        predictablePBEPasswordABICase1_25.go(charArray43);
        char[] charArray54 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_25.go(charArray54);
        char[] charArray59 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_25.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass62 = charArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_54.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray30 = null;
        predictablePBEPasswordABICase1_24.go(charArray30);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_24.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        predictablePBEPasswordABICase1_24.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_24.go(charArray73);
        predictablePBEPasswordABICase1_1.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_4.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_4.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_28.go(charArray63);
        predictablePBEPasswordABICase1_4.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_4.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_0.go(charArray66);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_3.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_28.go(charArray34);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_28.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        predictablePBEPasswordABICase1_28.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_28.go(charArray77);
        predictablePBEPasswordABICase1_3.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        predictablePBEPasswordABICase1_34.go(charArray65);
        predictablePBEPasswordABICase1_28.go(charArray65);
        predictablePBEPasswordABICase1_27.go(charArray65);
        predictablePBEPasswordABICase1_14.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        java.lang.Class<?> wildcardClass17 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        char[] charArray44 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_10.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_0.go(charArray47);
        java.lang.Class<?> wildcardClass49 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray26 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray26);
        predictablePBEPasswordABICase1_4.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray64 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray64);
        predictablePBEPasswordABICase1_30.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray78 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_67.go(charArray78);
        predictablePBEPasswordABICase1_30.go(charArray78);
        predictablePBEPasswordABICase1_29.go(charArray78);
        predictablePBEPasswordABICase1_4.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_83.go(charArray89);
        char[] charArray95 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_83.go(charArray95);
        predictablePBEPasswordABICase1_4.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        predictablePBEPasswordABICase1_32.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray91 = new char[] { '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass93 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_85.go(charArray92);
        predictablePBEPasswordABICase1_74.go(charArray92);
        predictablePBEPasswordABICase1_61.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray80 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_69.go(charArray80);
        predictablePBEPasswordABICase1_58.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray84 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        char[] charArray23 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_11.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_25.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        char[] charArray64 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_35.go(charArray64);
        predictablePBEPasswordABICase1_25.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_11.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass81 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_26.go(charArray32);
        char[] charArray38 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_26.go(charArray38);
        predictablePBEPasswordABICase1_3.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_48.go(charArray79);
        predictablePBEPasswordABICase1_42.go(charArray79);
        predictablePBEPasswordABICase1_41.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_41.go(charArray90);
        predictablePBEPasswordABICase1_3.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass96 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_38.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_38.go(charArray91);
        predictablePBEPasswordABICase1_37.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        predictablePBEPasswordABICase1_34.go(charArray65);
        predictablePBEPasswordABICase1_28.go(charArray65);
        predictablePBEPasswordABICase1_27.go(charArray65);
        predictablePBEPasswordABICase1_14.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = charArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray7 = null;
        predictablePBEPasswordABICase1_1.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        predictablePBEPasswordABICase1_9.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        predictablePBEPasswordABICase1_9.go(charArray27);
        predictablePBEPasswordABICase1_1.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_33.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        predictablePBEPasswordABICase1_33.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_33.go(charArray83);
        predictablePBEPasswordABICase1_1.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_11.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        char[] charArray94 = null;
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray19);
        char[] charArray21 = null;
        predictablePBEPasswordABICase1_8.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        predictablePBEPasswordABICase1_23.go(charArray41);
        char[] charArray52 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray52);
        predictablePBEPasswordABICase1_8.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_8.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        predictablePBEPasswordABICase1_25.go(charArray43);
        char[] charArray54 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_25.go(charArray54);
        char[] charArray59 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_25.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass62 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray45 = null;
        predictablePBEPasswordABICase1_37.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        char[] charArray76 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray76);
        predictablePBEPasswordABICase1_37.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_37.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_37.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_37.go(charArray63);
        char[] charArray72 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_37.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        char[] charArray51 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_53.go(charArray90);
        predictablePBEPasswordABICase1_17.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass99 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        predictablePBEPasswordABICase1_28.go(charArray59);
        predictablePBEPasswordABICase1_22.go(charArray59);
        predictablePBEPasswordABICase1_21.go(charArray59);
        predictablePBEPasswordABICase1_8.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass69 = charArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_19.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        predictablePBEPasswordABICase1_27.go(charArray45);
        predictablePBEPasswordABICase1_19.go(charArray45);
        predictablePBEPasswordABICase1_15.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_52.go(charArray74);
        predictablePBEPasswordABICase1_15.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_38.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_38.go(charArray91);
        predictablePBEPasswordABICase1_37.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        char[] charArray46 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_17.go(charArray46);
        char[] charArray51 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_53.go(charArray90);
        predictablePBEPasswordABICase1_17.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        predictablePBEPasswordABICase1_31.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_8.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass89 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_0.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        predictablePBEPasswordABICase1_16.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass70 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        char[] charArray76 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_64.go(charArray76);
        predictablePBEPasswordABICase1_33.go(charArray76);
        predictablePBEPasswordABICase1_22.go(charArray76);
        predictablePBEPasswordABICase1_11.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_8.go(charArray14);
        char[] charArray20 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_8.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_42.go(charArray73);
        predictablePBEPasswordABICase1_36.go(charArray73);
        predictablePBEPasswordABICase1_35.go(charArray73);
        predictablePBEPasswordABICase1_22.go(charArray73);
        predictablePBEPasswordABICase1_8.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass84 = charArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_6.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_38.go(charArray88);
        predictablePBEPasswordABICase1_6.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass96 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_19.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        predictablePBEPasswordABICase1_27.go(charArray45);
        predictablePBEPasswordABICase1_19.go(charArray45);
        predictablePBEPasswordABICase1_15.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray74 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_63.go(charArray74);
        predictablePBEPasswordABICase1_52.go(charArray74);
        predictablePBEPasswordABICase1_15.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass79 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray47 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_56.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_56.go(charArray87);
        predictablePBEPasswordABICase1_50.go(charArray87);
        predictablePBEPasswordABICase1_49.go(charArray87);
        predictablePBEPasswordABICase1_36.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass97 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_0.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass95 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_13.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_38.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_48.go(charArray83);
        char[] charArray87 = new char[] { '#' };
        predictablePBEPasswordABICase1_48.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_13.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_63.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_63.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        predictablePBEPasswordABICase1_11.go(charArray59);
        predictablePBEPasswordABICase1_10.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_10.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass71 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_48.go(charArray91);
        predictablePBEPasswordABICase1_11.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        predictablePBEPasswordABICase1_56.go(charArray74);
        char[] charArray85 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_56.go(charArray85);
        char[] charArray90 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_56.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass93 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        predictablePBEPasswordABICase1_27.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_27.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass84 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass72 = charArray67.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        char[] charArray69 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        predictablePBEPasswordABICase1_71.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray89 = new char[] { '4' };
        predictablePBEPasswordABICase1_87.go(charArray89);
        predictablePBEPasswordABICase1_86.go(charArray89);
        predictablePBEPasswordABICase1_82.go(charArray89);
        predictablePBEPasswordABICase1_71.go(charArray89);
        predictablePBEPasswordABICase1_40.go(charArray89);
        predictablePBEPasswordABICase1_39.go(charArray89);
        predictablePBEPasswordABICase1_33.go(charArray89);
        predictablePBEPasswordABICase1_10.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass99 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_58.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray45 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray45);
        predictablePBEPasswordABICase1_11.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        char[] charArray77 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_48.go(charArray91);
        predictablePBEPasswordABICase1_11.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_21.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        predictablePBEPasswordABICase1_21.go(charArray52);
        predictablePBEPasswordABICase1_15.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        char[] charArray94 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_15.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray20 = null;
        predictablePBEPasswordABICase1_14.go(charArray20);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_14.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        char[] charArray53 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray53);
        predictablePBEPasswordABICase1_14.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_14.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass83 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_62.go(charArray88);
        predictablePBEPasswordABICase1_24.go(charArray88);
        predictablePBEPasswordABICase1_13.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass97 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray48 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray48);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_37.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_53.go(charArray90);
        predictablePBEPasswordABICase1_52.go(charArray90);
        predictablePBEPasswordABICase1_37.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_0.go(charArray67);
        java.lang.Class<?> wildcardClass72 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray60 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_0.go(charArray62);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        predictablePBEPasswordABICase1_3.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_9.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        predictablePBEPasswordABICase1_9.go(charArray40);
        predictablePBEPasswordABICase1_3.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        char[] charArray82 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_47.go(charArray82);
        predictablePBEPasswordABICase1_3.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_0.go(charArray42);
        java.lang.Class<?> wildcardClass44 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_0.go(charArray37);
        java.lang.Class<?> wildcardClass39 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        char[] charArray56 = null;
        predictablePBEPasswordABICase1_50.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        predictablePBEPasswordABICase1_50.go(charArray76);
        predictablePBEPasswordABICase1_46.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass84 = charArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray88 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_95 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray97 = new char[] { '4' };
        predictablePBEPasswordABICase1_95.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_36.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        char[] charArray75 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray75);
        char[] charArray80 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_46.go(charArray80);
        predictablePBEPasswordABICase1_36.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_0.go(charArray62);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_26.go(charArray32);
        char[] charArray38 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_26.go(charArray38);
        predictablePBEPasswordABICase1_3.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_48.go(charArray79);
        predictablePBEPasswordABICase1_42.go(charArray79);
        predictablePBEPasswordABICase1_41.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_41.go(charArray90);
        predictablePBEPasswordABICase1_3.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        char[] charArray32 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_21.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        predictablePBEPasswordABICase1_21.go(charArray52);
        predictablePBEPasswordABICase1_15.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        char[] charArray94 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_15.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_6.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_38.go(charArray88);
        predictablePBEPasswordABICase1_6.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        predictablePBEPasswordABICase1_31.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_8.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_42.go(charArray73);
        predictablePBEPasswordABICase1_36.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass81 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray45 = null;
        predictablePBEPasswordABICase1_37.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        char[] charArray76 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray76);
        predictablePBEPasswordABICase1_37.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_37.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_37.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass92 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_35.go(charArray61);
        predictablePBEPasswordABICase1_31.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass69 = charArray61.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_85.go(charArray92);
        predictablePBEPasswordABICase1_74.go(charArray92);
        predictablePBEPasswordABICase1_61.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass99 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_1.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        char[] charArray87 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray87);
        char[] charArray92 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_58.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        char[] charArray95 = null;
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray47 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray67 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_56.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_56.go(charArray87);
        predictablePBEPasswordABICase1_50.go(charArray87);
        predictablePBEPasswordABICase1_49.go(charArray87);
        predictablePBEPasswordABICase1_36.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray97 = null;
        predictablePBEPasswordABICase1_0.go(charArray97);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_36.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        char[] charArray75 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray75);
        char[] charArray80 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_46.go(charArray80);
        predictablePBEPasswordABICase1_36.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass84 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        char[] charArray46 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_11.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_48.go(charArray83);
        char[] charArray87 = new char[] { '#' };
        predictablePBEPasswordABICase1_48.go(charArray87);
        predictablePBEPasswordABICase1_11.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_70.go(charArray88);
        predictablePBEPasswordABICase1_62.go(charArray88);
        predictablePBEPasswordABICase1_24.go(charArray88);
        predictablePBEPasswordABICase1_13.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_23.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass90 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        predictablePBEPasswordABICase1_21.go(charArray39);
        predictablePBEPasswordABICase1_13.go(charArray39);
        char[] charArray48 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_13.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_50.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray79 = null;
        predictablePBEPasswordABICase1_73.go(charArray79);
        char[] charArray85 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_73.go(charArray85);
        predictablePBEPasswordABICase1_50.go(charArray85);
        char[] charArray89 = new char[] { '#' };
        predictablePBEPasswordABICase1_50.go(charArray89);
        predictablePBEPasswordABICase1_13.go(charArray89);
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass93 = charArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        char[] charArray60 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_31.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray90 = new char[] { '#', '#', '4' };
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_46.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_49.go(charArray67);
        char[] charArray78 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray78);
        predictablePBEPasswordABICase1_46.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = charArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray7 = null;
        predictablePBEPasswordABICase1_1.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        predictablePBEPasswordABICase1_9.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        predictablePBEPasswordABICase1_9.go(charArray27);
        predictablePBEPasswordABICase1_1.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_33.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        predictablePBEPasswordABICase1_33.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_33.go(charArray83);
        predictablePBEPasswordABICase1_1.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass91 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_55.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass81 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_60.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_60.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_0.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_49.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        char[] charArray81 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray81);
        predictablePBEPasswordABICase1_49.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_0.go(charArray32);
        char[] charArray34 = null;
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_67.go(charArray73);
        char[] charArray79 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_67.go(charArray79);
        predictablePBEPasswordABICase1_36.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass83 = charArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_46.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass84 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_10.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        predictablePBEPasswordABICase1_25.go(charArray43);
        char[] charArray54 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_25.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_56.go(charArray62);
        char[] charArray68 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_56.go(charArray68);
        predictablePBEPasswordABICase1_25.go(charArray68);
        predictablePBEPasswordABICase1_10.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_10.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_44.go(charArray87);
        predictablePBEPasswordABICase1_7.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_6.go(charArray92);
        char[] charArray97 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_6.go(charArray97);
        predictablePBEPasswordABICase1_0.go(charArray97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray97);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_86.go(charArray93);
        predictablePBEPasswordABICase1_75.go(charArray93);
        predictablePBEPasswordABICase1_44.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        java.lang.Class<?> wildcardClass39 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_0.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_25.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        predictablePBEPasswordABICase1_35.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_58.go(charArray64);
        char[] charArray70 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_58.go(charArray70);
        predictablePBEPasswordABICase1_35.go(charArray70);
        char[] charArray74 = new char[] { '#' };
        predictablePBEPasswordABICase1_35.go(charArray74);
        predictablePBEPasswordABICase1_25.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass78 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_13.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_35.go(charArray61);
        predictablePBEPasswordABICase1_31.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass71 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray58 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_46.go(charArray58);
        predictablePBEPasswordABICase1_15.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_0.go(charArray62);
        java.lang.Class<?> wildcardClass64 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_41.go(charArray47);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_41.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        char[] charArray80 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_51.go(charArray80);
        char[] charArray85 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_51.go(charArray85);
        predictablePBEPasswordABICase1_41.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_0.go(charArray89);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_1.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        predictablePBEPasswordABICase1_16.go(charArray34);
        char[] charArray45 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray45);
        predictablePBEPasswordABICase1_1.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_49.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_72.go(charArray83);
        predictablePBEPasswordABICase1_49.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        predictablePBEPasswordABICase1_3.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        predictablePBEPasswordABICase1_29.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        char[] charArray63 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray63);
        predictablePBEPasswordABICase1_29.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_29.go(charArray77);
        predictablePBEPasswordABICase1_28.go(charArray77);
        predictablePBEPasswordABICase1_3.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        char[] charArray83 = null;
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray67 = new char[] { ' ', 'a', ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray67);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass73 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        char[] charArray31 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_20.go(charArray51);
        predictablePBEPasswordABICase1_14.go(charArray51);
        predictablePBEPasswordABICase1_13.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_13.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass99 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_8.go(charArray14);
        char[] charArray20 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_8.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        char[] charArray33 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_42.go(charArray73);
        predictablePBEPasswordABICase1_36.go(charArray73);
        predictablePBEPasswordABICase1_35.go(charArray73);
        predictablePBEPasswordABICase1_22.go(charArray73);
        predictablePBEPasswordABICase1_8.go(charArray73);
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_0.go(charArray37);
        java.lang.Class<?> wildcardClass39 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray41 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_49.go(charArray80);
        predictablePBEPasswordABICase1_43.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass88 = charArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_0.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_0.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_53.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_53.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray41 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray60 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_49.go(charArray80);
        predictablePBEPasswordABICase1_43.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray67 = new char[] { ' ', 'a', ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray67);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass71 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        predictablePBEPasswordABICase1_28.go(charArray59);
        predictablePBEPasswordABICase1_22.go(charArray59);
        predictablePBEPasswordABICase1_21.go(charArray59);
        predictablePBEPasswordABICase1_8.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray71 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_60.go(charArray71);
        predictablePBEPasswordABICase1_37.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_37.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_37.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        predictablePBEPasswordABICase1_4.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        char[] charArray39 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_27.go(charArray39);
        predictablePBEPasswordABICase1_4.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_0.go(charArray43);
        java.lang.Class<?> wildcardClass45 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        char[] charArray33 = null;
        predictablePBEPasswordABICase1_27.go(charArray33);
        char[] charArray39 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_27.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        char[] charArray70 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_41.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_72.go(charArray78);
        char[] charArray84 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_72.go(charArray84);
        predictablePBEPasswordABICase1_41.go(charArray84);
        predictablePBEPasswordABICase1_27.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_27.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        java.lang.Class<?> wildcardClass15 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        predictablePBEPasswordABICase1_84.go(charArray87);
        predictablePBEPasswordABICase1_80.go(charArray87);
        predictablePBEPasswordABICase1_69.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_37.go(charArray87);
        predictablePBEPasswordABICase1_31.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray96 = null;
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        char[] charArray25 = null;
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_65.go(charArray83);
        predictablePBEPasswordABICase1_34.go(charArray83);
        predictablePBEPasswordABICase1_33.go(charArray83);
        predictablePBEPasswordABICase1_27.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        char[] charArray60 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_31.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        predictablePBEPasswordABICase1_31.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray90 = new char[] { '#', '#', '4' };
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray50 = null;
        predictablePBEPasswordABICase1_44.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        predictablePBEPasswordABICase1_44.go(charArray70);
        char[] charArray79 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_44.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        char[] charArray30 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_1.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray57 = new char[] {};
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray70 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_59.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_59.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray97 = null;
        predictablePBEPasswordABICase1_0.go(charArray97);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_36.go(charArray85);
        predictablePBEPasswordABICase1_35.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_93 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray95 = new char[] { '4' };
        predictablePBEPasswordABICase1_93.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_35.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_35.go(charArray61);
        predictablePBEPasswordABICase1_31.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass69 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray58);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_47.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        char[] charArray91 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_62.go(charArray91);
        predictablePBEPasswordABICase1_47.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_0.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        predictablePBEPasswordABICase1_16.go(charArray65);
        predictablePBEPasswordABICase1_0.go(charArray65);
        java.lang.Class<?> wildcardClass70 = charArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray19);
        char[] charArray21 = null;
        predictablePBEPasswordABICase1_8.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        predictablePBEPasswordABICase1_23.go(charArray41);
        char[] charArray52 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray52);
        predictablePBEPasswordABICase1_8.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_8.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass88 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray45 = null;
        predictablePBEPasswordABICase1_37.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_70.go(charArray76);
        char[] charArray82 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_70.go(charArray82);
        predictablePBEPasswordABICase1_47.go(charArray82);
        char[] charArray86 = new char[] { '#' };
        predictablePBEPasswordABICase1_47.go(charArray86);
        predictablePBEPasswordABICase1_37.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_31.go(charArray37);
        char[] charArray43 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_31.go(charArray43);
        predictablePBEPasswordABICase1_0.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = null;
        predictablePBEPasswordABICase1_46.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_49.go(charArray67);
        char[] charArray78 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray78);
        predictablePBEPasswordABICase1_46.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        predictablePBEPasswordABICase1_3.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        char[] charArray20 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_9.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        predictablePBEPasswordABICase1_9.go(charArray40);
        predictablePBEPasswordABICase1_3.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_47.go(charArray73);
        char[] charArray82 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_47.go(charArray82);
        predictablePBEPasswordABICase1_3.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_19.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        char[] charArray44 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_32.go(charArray44);
        predictablePBEPasswordABICase1_19.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_47.go(charArray72);
        predictablePBEPasswordABICase1_19.go(charArray72);
        predictablePBEPasswordABICase1_15.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass78 = charArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_43.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        predictablePBEPasswordABICase1_43.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass76 = charArray69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        char[] charArray56 = null;
        predictablePBEPasswordABICase1_50.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        predictablePBEPasswordABICase1_58.go(charArray76);
        predictablePBEPasswordABICase1_50.go(charArray76);
        predictablePBEPasswordABICase1_46.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_46.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray21 = null;
        predictablePBEPasswordABICase1_15.go(charArray21);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_15.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_25.go(charArray51);
        predictablePBEPasswordABICase1_15.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass59 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_63.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_63.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_13.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        char[] charArray46 = null;
        predictablePBEPasswordABICase1_38.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_48.go(charArray83);
        char[] charArray87 = new char[] { '#' };
        predictablePBEPasswordABICase1_48.go(charArray87);
        predictablePBEPasswordABICase1_38.go(charArray87);
        predictablePBEPasswordABICase1_13.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass92 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_0.go(charArray37);
        java.lang.Class<?> wildcardClass39 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_23.go(charArray84);
        predictablePBEPasswordABICase1_12.go(charArray84);
        predictablePBEPasswordABICase1_11.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray54 = null;
        predictablePBEPasswordABICase1_46.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_56.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_56.go(charArray82);
        predictablePBEPasswordABICase1_46.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        java.lang.Class<?> wildcardClass53 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray72 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray72);
        predictablePBEPasswordABICase1_38.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray86 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_75.go(charArray86);
        predictablePBEPasswordABICase1_38.go(charArray86);
        char[] charArray95 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_38.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        char[] charArray98 = null;
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_72.go(charArray83);
        predictablePBEPasswordABICase1_61.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_28.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_28.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        predictablePBEPasswordABICase1_32.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        char[] charArray74 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_45.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass77 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray22 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray22);
        predictablePBEPasswordABICase1_0.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_32.go(charArray63);
        predictablePBEPasswordABICase1_26.go(charArray63);
        predictablePBEPasswordABICase1_25.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass72 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        char[] charArray42 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_13.go(charArray42);
        char[] charArray47 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_13.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        char[] charArray61 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_49.go(charArray61);
        predictablePBEPasswordABICase1_13.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_64.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_64.go(charArray85);
        predictablePBEPasswordABICase1_13.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass90 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        char[] charArray41 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_12.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        predictablePBEPasswordABICase1_12.go(charArray61);
        predictablePBEPasswordABICase1_11.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray88 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        char[] charArray18 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        predictablePBEPasswordABICase1_7.go(charArray38);
        predictablePBEPasswordABICase1_1.go(charArray38);
        predictablePBEPasswordABICase1_0.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_46.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_14.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        predictablePBEPasswordABICase1_29.go(charArray47);
        char[] charArray58 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray58);
        predictablePBEPasswordABICase1_14.go(charArray58);
        predictablePBEPasswordABICase1_13.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass63 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_36.go(charArray85);
        predictablePBEPasswordABICase1_35.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass93 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_24.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        char[] charArray63 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_52.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        char[] charArray77 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_65.go(charArray77);
        predictablePBEPasswordABICase1_52.go(charArray77);
        predictablePBEPasswordABICase1_24.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_24.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray94 = null;
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        char[] charArray18 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_6.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        predictablePBEPasswordABICase1_63.go(charArray81);
        predictablePBEPasswordABICase1_32.go(charArray81);
        predictablePBEPasswordABICase1_31.go(charArray81);
        predictablePBEPasswordABICase1_20.go(charArray81);
        predictablePBEPasswordABICase1_6.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray91 = null;
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass93 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        char[] charArray74 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_17.go(charArray74);
        predictablePBEPasswordABICase1_11.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass78 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        predictablePBEPasswordABICase1_39.go(charArray42);
        predictablePBEPasswordABICase1_35.go(charArray42);
        predictablePBEPasswordABICase1_24.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray53 = null;
        predictablePBEPasswordABICase1_47.go(charArray53);
        char[] charArray59 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_47.go(charArray59);
        predictablePBEPasswordABICase1_24.go(charArray59);
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_63.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        char[] charArray84 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_73.go(charArray84);
        predictablePBEPasswordABICase1_63.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray39 = new char[] { '#' };
        predictablePBEPasswordABICase1_0.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        char[] charArray49 = null;
        predictablePBEPasswordABICase1_43.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        predictablePBEPasswordABICase1_43.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass76 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray41 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_74.go(charArray80);
        char[] charArray86 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_74.go(charArray86);
        predictablePBEPasswordABICase1_43.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_43.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass97 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_0.go(charArray55);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        char[] charArray94 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        predictablePBEPasswordABICase1_0.go(charArray50);
        char[] charArray56 = null;
        predictablePBEPasswordABICase1_0.go(charArray56);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        java.lang.Class<?> wildcardClass60 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        predictablePBEPasswordABICase1_32.go(charArray50);
        char[] charArray61 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_63.go(charArray69);
        char[] charArray75 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_63.go(charArray75);
        predictablePBEPasswordABICase1_32.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_79.go(charArray85);
        char[] charArray91 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_79.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray58);
        char[] charArray60 = null;
        predictablePBEPasswordABICase1_47.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        predictablePBEPasswordABICase1_62.go(charArray80);
        char[] charArray91 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_62.go(charArray91);
        predictablePBEPasswordABICase1_47.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_70.go(charArray76);
        char[] charArray82 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_70.go(charArray82);
        predictablePBEPasswordABICase1_39.go(charArray82);
        predictablePBEPasswordABICase1_28.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        char[] charArray87 = null;
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass89 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        predictablePBEPasswordABICase1_3.go(charArray6);
        char[] charArray14 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        char[] charArray22 = null;
        predictablePBEPasswordABICase1_16.go(charArray22);
        char[] charArray28 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_16.go(charArray28);
        predictablePBEPasswordABICase1_3.go(charArray28);
        predictablePBEPasswordABICase1_0.go(charArray28);
        java.lang.Class<?> wildcardClass32 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        char[] charArray35 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray49 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_37.go(charArray49);
        predictablePBEPasswordABICase1_6.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        predictablePBEPasswordABICase1_63.go(charArray70);
        predictablePBEPasswordABICase1_52.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        predictablePBEPasswordABICase1_75.go(charArray78);
        char[] charArray81 = null;
        predictablePBEPasswordABICase1_75.go(charArray81);
        char[] charArray87 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_75.go(charArray87);
        predictablePBEPasswordABICase1_52.go(charArray87);
        predictablePBEPasswordABICase1_6.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_0.go(charArray92);
        char[] charArray94 = null;
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        predictablePBEPasswordABICase1_5.go(charArray8);
        predictablePBEPasswordABICase1_1.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        predictablePBEPasswordABICase1_1.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray35 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_24.go(charArray35);
        predictablePBEPasswordABICase1_1.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        predictablePBEPasswordABICase1_1.go(charArray49);
        char[] charArray58 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_1.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        predictablePBEPasswordABICase1_0.go(charArray68);
        char[] charArray73 = null;
        predictablePBEPasswordABICase1_0.go(charArray73);
        java.lang.Class<?> wildcardClass75 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray84 = null;
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        char[] charArray35 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        char[] charArray43 = null;
        predictablePBEPasswordABICase1_37.go(charArray43);
        char[] charArray45 = null;
        predictablePBEPasswordABICase1_37.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_70.go(charArray76);
        char[] charArray82 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_70.go(charArray82);
        predictablePBEPasswordABICase1_47.go(charArray82);
        char[] charArray86 = new char[] { '#' };
        predictablePBEPasswordABICase1_47.go(charArray86);
        predictablePBEPasswordABICase1_37.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray52 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_41.go(charArray52);
        predictablePBEPasswordABICase1_18.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        predictablePBEPasswordABICase1_18.go(charArray66);
        char[] charArray75 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_18.go(charArray75);
        predictablePBEPasswordABICase1_17.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass79 = charArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        char[] charArray74 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_17.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass77 = charArray74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_28.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_28.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_0.go(charArray76);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        char[] charArray67 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray75 = null;
        predictablePBEPasswordABICase1_69.go(charArray75);
        char[] charArray81 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_69.go(charArray81);
        predictablePBEPasswordABICase1_38.go(charArray81);
        predictablePBEPasswordABICase1_1.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray91 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray91);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        char[] charArray95 = null;
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray17 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_6.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_6.go(charArray37);
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray52 = null;
        predictablePBEPasswordABICase1_46.go(charArray52);
        char[] charArray54 = null;
        predictablePBEPasswordABICase1_46.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_56.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_56.go(charArray82);
        predictablePBEPasswordABICase1_46.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass90 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass68 = charArray64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        predictablePBEPasswordABICase1_0.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        predictablePBEPasswordABICase1_37.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        predictablePBEPasswordABICase1_37.go(charArray55);
        char[] charArray66 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_37.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        char[] charArray74 = null;
        predictablePBEPasswordABICase1_68.go(charArray74);
        char[] charArray80 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_68.go(charArray80);
        predictablePBEPasswordABICase1_37.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray84 = null;
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray86 = null;
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_0.go(charArray88);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_91 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray93 = new char[] { '4' };
        predictablePBEPasswordABICase1_91.go(charArray93);
        predictablePBEPasswordABICase1_90.go(charArray93);
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass97 = charArray93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        char[] charArray37 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray37);
        char[] charArray42 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_8.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        char[] charArray78 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_44.go(charArray78);
        predictablePBEPasswordABICase1_8.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_8.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        char[] charArray94 = null;
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        predictablePBEPasswordABICase1_22.go(charArray40);
        char[] charArray51 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_22.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        predictablePBEPasswordABICase1_53.go(charArray71);
        predictablePBEPasswordABICase1_22.go(charArray71);
        predictablePBEPasswordABICase1_21.go(charArray71);
        predictablePBEPasswordABICase1_10.go(charArray71);
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass80 = charArray71.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_65.go(charArray91);
        predictablePBEPasswordABICase1_61.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        predictablePBEPasswordABICase1_40.go(charArray58);
        predictablePBEPasswordABICase1_32.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        predictablePBEPasswordABICase1_68.go(charArray71);
        predictablePBEPasswordABICase1_64.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray82 = new char[] { '4' };
        predictablePBEPasswordABICase1_80.go(charArray82);
        predictablePBEPasswordABICase1_79.go(charArray82);
        predictablePBEPasswordABICase1_75.go(charArray82);
        predictablePBEPasswordABICase1_64.go(charArray82);
        predictablePBEPasswordABICase1_32.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass96 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray43 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_32.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_32.go(charArray57);
        predictablePBEPasswordABICase1_4.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        char[] charArray68 = null;
        predictablePBEPasswordABICase1_62.go(charArray68);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_62.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        char[] charArray83 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_72.go(charArray83);
        predictablePBEPasswordABICase1_62.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_23.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass80 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        char[] charArray42 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_13.go(charArray42);
        char[] charArray47 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_13.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        char[] charArray61 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_49.go(charArray61);
        predictablePBEPasswordABICase1_13.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_64.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_64.go(charArray85);
        predictablePBEPasswordABICase1_13.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        char[] charArray74 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_17.go(charArray74);
        predictablePBEPasswordABICase1_11.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_23.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass90 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_10.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        predictablePBEPasswordABICase1_25.go(charArray43);
        char[] charArray54 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_25.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_56.go(charArray62);
        char[] charArray68 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_56.go(charArray68);
        predictablePBEPasswordABICase1_25.go(charArray68);
        predictablePBEPasswordABICase1_10.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_10.go(charArray79);
        predictablePBEPasswordABICase1_0.go(charArray79);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_66.go(charArray72);
        char[] charArray78 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_66.go(charArray78);
        predictablePBEPasswordABICase1_43.go(charArray78);
        char[] charArray84 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_43.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass87 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        predictablePBEPasswordABICase1_2.go(charArray5);
        char[] charArray13 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_2.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        predictablePBEPasswordABICase1_2.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        predictablePBEPasswordABICase1_50.go(charArray57);
        predictablePBEPasswordABICase1_39.go(charArray57);
        char[] charArray68 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_39.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray76 = null;
        predictablePBEPasswordABICase1_70.go(charArray76);
        char[] charArray82 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_70.go(charArray82);
        predictablePBEPasswordABICase1_39.go(charArray82);
        predictablePBEPasswordABICase1_2.go(charArray82);
        predictablePBEPasswordABICase1_1.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass88 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_1.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        java.lang.Class<?> wildcardClass39 = charArray32.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        predictablePBEPasswordABICase1_36.go(charArray62);
        predictablePBEPasswordABICase1_32.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray71 = new char[] { '4' };
        predictablePBEPasswordABICase1_69.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        predictablePBEPasswordABICase1_73.go(charArray76);
        predictablePBEPasswordABICase1_69.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_69.go(charArray91);
        predictablePBEPasswordABICase1_32.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass96 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        predictablePBEPasswordABICase1_41.go(charArray44);
        char[] charArray52 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_41.go(charArray52);
        predictablePBEPasswordABICase1_18.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        predictablePBEPasswordABICase1_18.go(charArray66);
        char[] charArray75 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_18.go(charArray75);
        predictablePBEPasswordABICase1_17.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        java.lang.Class<?> wildcardClass79 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        predictablePBEPasswordABICase1_7.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        predictablePBEPasswordABICase1_7.go(charArray25);
        char[] charArray36 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_7.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_38.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        predictablePBEPasswordABICase1_38.go(charArray56);
        predictablePBEPasswordABICase1_7.go(charArray56);
        predictablePBEPasswordABICase1_6.go(charArray56);
        predictablePBEPasswordABICase1_0.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray97 = null;
        predictablePBEPasswordABICase1_0.go(charArray97);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_23.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        char[] charArray84 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray84);
        predictablePBEPasswordABICase1_23.go(charArray84);
        predictablePBEPasswordABICase1_12.go(charArray84);
        predictablePBEPasswordABICase1_11.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray92 = null;
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass94 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_85.go(charArray92);
        predictablePBEPasswordABICase1_74.go(charArray92);
        predictablePBEPasswordABICase1_43.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass99 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray10 = null;
        predictablePBEPasswordABICase1_4.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        predictablePBEPasswordABICase1_16.go(charArray19);
        predictablePBEPasswordABICase1_12.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        predictablePBEPasswordABICase1_27.go(charArray30);
        predictablePBEPasswordABICase1_23.go(charArray30);
        predictablePBEPasswordABICase1_12.go(charArray30);
        predictablePBEPasswordABICase1_4.go(charArray30);
        predictablePBEPasswordABICase1_0.go(charArray30);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_0.go(charArray37);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_0.go(charArray39);
        java.lang.Class<?> wildcardClass41 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray21 = null;
        predictablePBEPasswordABICase1_15.go(charArray21);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_15.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_25.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        predictablePBEPasswordABICase1_25.go(charArray51);
        predictablePBEPasswordABICase1_15.go(charArray51);
        predictablePBEPasswordABICase1_0.go(charArray51);
        java.lang.Class<?> wildcardClass59 = charArray51.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        char[] charArray18 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_6.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        predictablePBEPasswordABICase1_20.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        predictablePBEPasswordABICase1_20.go(charArray38);
        char[] charArray49 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_20.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_51.go(charArray57);
        char[] charArray63 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_51.go(charArray63);
        predictablePBEPasswordABICase1_20.go(charArray63);
        predictablePBEPasswordABICase1_6.go(charArray63);
        predictablePBEPasswordABICase1_0.go(charArray63);
        java.lang.Class<?> wildcardClass68 = charArray63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_83.go(charArray90);
        predictablePBEPasswordABICase1_72.go(charArray90);
        predictablePBEPasswordABICase1_64.go(charArray90);
        predictablePBEPasswordABICase1_60.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray98 = null;
        predictablePBEPasswordABICase1_0.go(charArray98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        char[] charArray74 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_17.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        char[] charArray36 = null;
        predictablePBEPasswordABICase1_0.go(charArray36);
        java.lang.Class<?> wildcardClass38 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_11.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        predictablePBEPasswordABICase1_19.go(charArray37);
        predictablePBEPasswordABICase1_11.go(charArray37);
        char[] charArray46 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_11.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        predictablePBEPasswordABICase1_52.go(charArray55);
        predictablePBEPasswordABICase1_48.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        predictablePBEPasswordABICase1_48.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray77 = null;
        predictablePBEPasswordABICase1_71.go(charArray77);
        char[] charArray83 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_71.go(charArray83);
        predictablePBEPasswordABICase1_48.go(charArray83);
        char[] charArray87 = new char[] { '#' };
        predictablePBEPasswordABICase1_48.go(charArray87);
        predictablePBEPasswordABICase1_11.go(charArray87);
        predictablePBEPasswordABICase1_0.go(charArray87);
        java.lang.Class<?> wildcardClass91 = charArray87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_1.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        predictablePBEPasswordABICase1_16.go(charArray34);
        char[] charArray45 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray45);
        predictablePBEPasswordABICase1_1.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_49.go(charArray67);
        char[] charArray78 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray78);
        char[] charArray83 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_49.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray6 = new char[] { '4' };
        predictablePBEPasswordABICase1_4.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        predictablePBEPasswordABICase1_4.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        char[] charArray26 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray26);
        predictablePBEPasswordABICase1_4.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        predictablePBEPasswordABICase1_30.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        predictablePBEPasswordABICase1_30.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        char[] charArray64 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_53.go(charArray64);
        predictablePBEPasswordABICase1_30.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray78 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_67.go(charArray78);
        predictablePBEPasswordABICase1_30.go(charArray78);
        predictablePBEPasswordABICase1_29.go(charArray78);
        predictablePBEPasswordABICase1_4.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        char[] charArray89 = null;
        predictablePBEPasswordABICase1_83.go(charArray89);
        char[] charArray95 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_83.go(charArray95);
        predictablePBEPasswordABICase1_4.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass99 = charArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray76 = new char[] { '4' };
        predictablePBEPasswordABICase1_74.go(charArray76);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        predictablePBEPasswordABICase1_78.go(charArray81);
        predictablePBEPasswordABICase1_74.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray87 = new char[] { '4' };
        predictablePBEPasswordABICase1_85.go(charArray87);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_85.go(charArray92);
        predictablePBEPasswordABICase1_74.go(charArray92);
        predictablePBEPasswordABICase1_43.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass99 = charArray92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        char[] charArray41 = new char[] { 'a', ' ', '#' };
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_74.go(charArray80);
        char[] charArray86 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_74.go(charArray86);
        predictablePBEPasswordABICase1_43.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_90 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray92 = new char[] { '4' };
        predictablePBEPasswordABICase1_90.go(charArray92);
        predictablePBEPasswordABICase1_89.go(charArray92);
        predictablePBEPasswordABICase1_43.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass97 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        char[] charArray15 = null;
        predictablePBEPasswordABICase1_0.go(charArray15);
        char[] charArray17 = null;
        predictablePBEPasswordABICase1_0.go(charArray17);
        java.lang.Class<?> wildcardClass19 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray40 = null;
        predictablePBEPasswordABICase1_34.go(charArray40);
        char[] charArray46 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_34.go(charArray46);
        predictablePBEPasswordABICase1_11.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_49.go(charArray86);
        predictablePBEPasswordABICase1_11.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        char[] charArray96 = new char[] { 'a' };
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = charArray96.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        char[] charArray37 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray37);
        char[] charArray42 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_8.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        predictablePBEPasswordABICase1_44.go(charArray62);
        char[] charArray73 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray73);
        char[] charArray78 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_44.go(charArray78);
        predictablePBEPasswordABICase1_8.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_85 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_86 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray88 = new char[] { '4' };
        predictablePBEPasswordABICase1_86.go(charArray88);
        predictablePBEPasswordABICase1_85.go(charArray88);
        predictablePBEPasswordABICase1_81.go(charArray88);
        predictablePBEPasswordABICase1_8.go(charArray88);
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass94 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_65.go(charArray71);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        predictablePBEPasswordABICase1_77.go(charArray80);
        predictablePBEPasswordABICase1_73.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_89 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray91 = new char[] { '4' };
        predictablePBEPasswordABICase1_89.go(charArray91);
        predictablePBEPasswordABICase1_88.go(charArray91);
        predictablePBEPasswordABICase1_84.go(charArray91);
        predictablePBEPasswordABICase1_73.go(charArray91);
        predictablePBEPasswordABICase1_65.go(charArray91);
        predictablePBEPasswordABICase1_61.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass99 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_0.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        char[] charArray57 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray66 = new char[] { '4' };
        predictablePBEPasswordABICase1_64.go(charArray66);
        predictablePBEPasswordABICase1_63.go(charArray66);
        predictablePBEPasswordABICase1_59.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        predictablePBEPasswordABICase1_70.go(charArray77);
        predictablePBEPasswordABICase1_59.go(charArray77);
        predictablePBEPasswordABICase1_28.go(charArray77);
        predictablePBEPasswordABICase1_27.go(charArray77);
        predictablePBEPasswordABICase1_16.go(charArray77);
        predictablePBEPasswordABICase1_0.go(charArray77);
        java.lang.Class<?> wildcardClass86 = charArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_2 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray4 = new char[] { '4' };
        predictablePBEPasswordABICase1_2.go(charArray4);
        predictablePBEPasswordABICase1_1.go(charArray4);
        char[] charArray12 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_1.go(charArray12);
        char[] charArray14 = null;
        predictablePBEPasswordABICase1_1.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        predictablePBEPasswordABICase1_31.go(charArray34);
        predictablePBEPasswordABICase1_27.go(charArray34);
        predictablePBEPasswordABICase1_16.go(charArray34);
        char[] charArray45 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_16.go(charArray45);
        predictablePBEPasswordABICase1_1.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        predictablePBEPasswordABICase1_53.go(charArray56);
        predictablePBEPasswordABICase1_49.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        predictablePBEPasswordABICase1_60.go(charArray67);
        predictablePBEPasswordABICase1_49.go(charArray67);
        char[] charArray78 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_49.go(charArray78);
        char[] charArray83 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_49.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass86 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        predictablePBEPasswordABICase1_0.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        predictablePBEPasswordABICase1_57.go(charArray75);
        predictablePBEPasswordABICase1_49.go(charArray75);
        predictablePBEPasswordABICase1_0.go(charArray75);
        char[] charArray82 = null;
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass84 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        predictablePBEPasswordABICase1_9.go(charArray12);
        predictablePBEPasswordABICase1_5.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        predictablePBEPasswordABICase1_20.go(charArray23);
        predictablePBEPasswordABICase1_16.go(charArray23);
        predictablePBEPasswordABICase1_5.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        predictablePBEPasswordABICase1_5.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        predictablePBEPasswordABICase1_5.go(charArray53);
        predictablePBEPasswordABICase1_4.go(charArray53);
        predictablePBEPasswordABICase1_0.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        char[] charArray80 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_69.go(charArray80);
        predictablePBEPasswordABICase1_58.go(charArray80);
        predictablePBEPasswordABICase1_0.go(charArray80);
        char[] charArray84 = null;
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_0.go(charArray55);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        char[] charArray65 = null;
        predictablePBEPasswordABICase1_59.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_59.go(charArray85);
        char[] charArray94 = new char[] { ' ', 'a', 'a' };
        predictablePBEPasswordABICase1_59.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass97 = charArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_53 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray55 = new char[] { '4' };
        predictablePBEPasswordABICase1_53.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        predictablePBEPasswordABICase1_57.go(charArray60);
        predictablePBEPasswordABICase1_53.go(charArray60);
        predictablePBEPasswordABICase1_42.go(charArray60);
        predictablePBEPasswordABICase1_11.go(charArray60);
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_0.go(charArray67);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_0.go(charArray69);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass73 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        char[] charArray25 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_13.go(charArray25);
        predictablePBEPasswordABICase1_0.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        char[] charArray39 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_28.go(charArray39);
        char[] charArray41 = null;
        predictablePBEPasswordABICase1_28.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        predictablePBEPasswordABICase1_28.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray78 = new char[] { '4' };
        predictablePBEPasswordABICase1_76.go(charArray78);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        predictablePBEPasswordABICase1_76.go(charArray83);
        predictablePBEPasswordABICase1_0.go(charArray83);
        java.lang.Class<?> wildcardClass88 = charArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray30 = null;
        predictablePBEPasswordABICase1_24.go(charArray30);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_24.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        predictablePBEPasswordABICase1_24.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_24.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass91 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        predictablePBEPasswordABICase1_56.go(charArray63);
        predictablePBEPasswordABICase1_45.go(charArray63);
        predictablePBEPasswordABICase1_14.go(charArray63);
        predictablePBEPasswordABICase1_13.go(charArray63);
        char[] charArray70 = new char[] {};
        predictablePBEPasswordABICase1_13.go(charArray70);
        predictablePBEPasswordABICase1_0.go(charArray70);
        java.lang.Class<?> wildcardClass73 = charArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray37 = new char[] { '4' };
        predictablePBEPasswordABICase1_35.go(charArray37);
        predictablePBEPasswordABICase1_34.go(charArray37);
        char[] charArray40 = null;
        predictablePBEPasswordABICase1_34.go(charArray40);
        char[] charArray46 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_34.go(charArray46);
        predictablePBEPasswordABICase1_11.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_49.go(charArray86);
        predictablePBEPasswordABICase1_11.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        java.lang.Class<?> wildcardClass95 = charArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_26.go(charArray32);
        char[] charArray38 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_26.go(charArray38);
        predictablePBEPasswordABICase1_3.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        char[] charArray59 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_48.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        predictablePBEPasswordABICase1_48.go(charArray79);
        predictablePBEPasswordABICase1_42.go(charArray79);
        predictablePBEPasswordABICase1_41.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_87 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_88 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray90 = new char[] { '4' };
        predictablePBEPasswordABICase1_88.go(charArray90);
        predictablePBEPasswordABICase1_87.go(charArray90);
        predictablePBEPasswordABICase1_41.go(charArray90);
        predictablePBEPasswordABICase1_3.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        char[] charArray96 = null;
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        char[] charArray45 = null;
        predictablePBEPasswordABICase1_0.go(charArray45);
        java.lang.Class<?> wildcardClass47 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        char[] charArray25 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray25);
        char[] charArray27 = null;
        predictablePBEPasswordABICase1_14.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray42 = new char[] { '4' };
        predictablePBEPasswordABICase1_40.go(charArray42);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        predictablePBEPasswordABICase1_40.go(charArray47);
        predictablePBEPasswordABICase1_29.go(charArray47);
        char[] charArray58 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_29.go(charArray58);
        predictablePBEPasswordABICase1_14.go(charArray58);
        predictablePBEPasswordABICase1_13.go(charArray58);
        predictablePBEPasswordABICase1_0.go(charArray58);
        char[] charArray68 = new char[] { ' ', '4', 'a', '#', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray68);
        java.lang.Class<?> wildcardClass70 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        char[] charArray42 = null;
        predictablePBEPasswordABICase1_36.go(charArray42);
        char[] charArray48 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_36.go(charArray48);
        predictablePBEPasswordABICase1_13.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_51.go(charArray85);
        predictablePBEPasswordABICase1_13.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass90 = charArray85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray40 = new char[] { '4' };
        predictablePBEPasswordABICase1_38.go(charArray40);
        predictablePBEPasswordABICase1_37.go(charArray40);
        predictablePBEPasswordABICase1_33.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray51 = new char[] { '4' };
        predictablePBEPasswordABICase1_49.go(charArray51);
        predictablePBEPasswordABICase1_48.go(charArray51);
        predictablePBEPasswordABICase1_44.go(charArray51);
        predictablePBEPasswordABICase1_33.go(charArray51);
        char[] charArray62 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_33.go(charArray62);
        predictablePBEPasswordABICase1_23.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_69 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray72 = new char[] { '4' };
        predictablePBEPasswordABICase1_70.go(charArray72);
        predictablePBEPasswordABICase1_69.go(charArray72);
        predictablePBEPasswordABICase1_65.go(charArray72);
        predictablePBEPasswordABICase1_23.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        char[] charArray78 = null;
        predictablePBEPasswordABICase1_0.go(charArray78);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_0.go(charArray80);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        char[] charArray44 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_10.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_47.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_9 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray11 = new char[] { '4' };
        predictablePBEPasswordABICase1_9.go(charArray11);
        predictablePBEPasswordABICase1_8.go(charArray11);
        char[] charArray19 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_8.go(charArray19);
        char[] charArray21 = null;
        predictablePBEPasswordABICase1_8.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray31 = null;
        predictablePBEPasswordABICase1_23.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        char[] charArray39 = null;
        predictablePBEPasswordABICase1_33.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        predictablePBEPasswordABICase1_41.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        predictablePBEPasswordABICase1_56.go(charArray59);
        predictablePBEPasswordABICase1_52.go(charArray59);
        predictablePBEPasswordABICase1_41.go(charArray59);
        predictablePBEPasswordABICase1_33.go(charArray59);
        predictablePBEPasswordABICase1_23.go(charArray59);
        predictablePBEPasswordABICase1_8.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        predictablePBEPasswordABICase1_67.go(charArray70);
        char[] charArray78 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_67.go(charArray78);
        predictablePBEPasswordABICase1_8.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        predictablePBEPasswordABICase1_28.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        char[] charArray62 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_51.go(charArray62);
        predictablePBEPasswordABICase1_28.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        char[] charArray76 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_65.go(charArray76);
        predictablePBEPasswordABICase1_28.go(charArray76);
        predictablePBEPasswordABICase1_27.go(charArray76);
        predictablePBEPasswordABICase1_23.go(charArray76);
        predictablePBEPasswordABICase1_0.go(charArray76);
        java.lang.Class<?> wildcardClass82 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_0.go(charArray55);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_0.go(charArray59);
        java.lang.Class<?> wildcardClass61 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray11 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        predictablePBEPasswordABICase1_15.go(charArray22);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        predictablePBEPasswordABICase1_30.go(charArray33);
        predictablePBEPasswordABICase1_26.go(charArray33);
        predictablePBEPasswordABICase1_15.go(charArray33);
        char[] charArray44 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_15.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_47.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        char[] charArray85 = null;
        predictablePBEPasswordABICase1_0.go(charArray85);
        java.lang.Class<?> wildcardClass87 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        char[] charArray44 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_10.go(charArray44);
        predictablePBEPasswordABICase1_0.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray60 = new char[] { '4' };
        predictablePBEPasswordABICase1_58.go(charArray60);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_63 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray65 = new char[] { '4' };
        predictablePBEPasswordABICase1_63.go(charArray65);
        predictablePBEPasswordABICase1_62.go(charArray65);
        predictablePBEPasswordABICase1_58.go(charArray65);
        predictablePBEPasswordABICase1_47.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        char[] charArray81 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_70.go(charArray81);
        predictablePBEPasswordABICase1_47.go(charArray81);
        predictablePBEPasswordABICase1_0.go(charArray81);
        java.lang.Class<?> wildcardClass85 = charArray81.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_46.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        char[] charArray90 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray90);
        predictablePBEPasswordABICase1_46.go(charArray90);
        predictablePBEPasswordABICase1_45.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass95 = charArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        predictablePBEPasswordABICase1_12.go(charArray15);
        predictablePBEPasswordABICase1_8.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        predictablePBEPasswordABICase1_19.go(charArray26);
        predictablePBEPasswordABICase1_8.go(charArray26);
        predictablePBEPasswordABICase1_0.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        char[] charArray72 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_43.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_74.go(charArray80);
        char[] charArray86 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_74.go(charArray86);
        predictablePBEPasswordABICase1_43.go(charArray86);
        predictablePBEPasswordABICase1_32.go(charArray86);
        char[] charArray92 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_32.go(charArray92);
        predictablePBEPasswordABICase1_0.go(charArray92);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        char[] charArray13 = null;
        predictablePBEPasswordABICase1_0.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_20 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray22 = new char[] { '4' };
        predictablePBEPasswordABICase1_20.go(charArray22);
        predictablePBEPasswordABICase1_19.go(charArray22);
        char[] charArray30 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_19.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        char[] charArray38 = null;
        predictablePBEPasswordABICase1_32.go(charArray38);
        char[] charArray44 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_32.go(charArray44);
        predictablePBEPasswordABICase1_19.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        char[] charArray58 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_47.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        char[] charArray72 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_60.go(charArray72);
        predictablePBEPasswordABICase1_47.go(charArray72);
        predictablePBEPasswordABICase1_19.go(charArray72);
        predictablePBEPasswordABICase1_15.go(charArray72);
        predictablePBEPasswordABICase1_0.go(charArray72);
        java.lang.Class<?> wildcardClass78 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        predictablePBEPasswordABICase1_21.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray55);
        predictablePBEPasswordABICase1_21.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray69);
        predictablePBEPasswordABICase1_21.go(charArray69);
        char[] charArray78 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_21.go(charArray78);
        predictablePBEPasswordABICase1_13.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        java.lang.Class<?> wildcardClass82 = charArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = null;
        predictablePBEPasswordABICase1_1.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        char[] charArray15 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_4.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        char[] charArray23 = null;
        predictablePBEPasswordABICase1_17.go(charArray23);
        char[] charArray29 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_17.go(charArray29);
        predictablePBEPasswordABICase1_4.go(charArray29);
        predictablePBEPasswordABICase1_1.go(charArray29);
        predictablePBEPasswordABICase1_0.go(charArray29);
        java.lang.Class<?> wildcardClass34 = charArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray58 = null;
        predictablePBEPasswordABICase1_0.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        predictablePBEPasswordABICase1_60.go(charArray63);
        char[] charArray66 = null;
        predictablePBEPasswordABICase1_60.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_60.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray34 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_23.go(charArray34);
        predictablePBEPasswordABICase1_0.go(charArray34);
        char[] charArray37 = null;
        predictablePBEPasswordABICase1_0.go(charArray37);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray46 = new char[] { '4' };
        predictablePBEPasswordABICase1_44.go(charArray46);
        predictablePBEPasswordABICase1_43.go(charArray46);
        predictablePBEPasswordABICase1_39.go(charArray46);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        char[] charArray61 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_50.go(charArray61);
        predictablePBEPasswordABICase1_39.go(charArray61);
        predictablePBEPasswordABICase1_0.go(charArray61);
        java.lang.Class<?> wildcardClass65 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_27 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray29 = new char[] { '4' };
        predictablePBEPasswordABICase1_27.go(charArray29);
        predictablePBEPasswordABICase1_26.go(charArray29);
        predictablePBEPasswordABICase1_22.go(charArray29);
        predictablePBEPasswordABICase1_11.go(charArray29);
        char[] charArray40 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_11.go(charArray40);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_11.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray60 = new char[] { ' ', '4' };
        predictablePBEPasswordABICase1_0.go(charArray60);
        char[] charArray62 = null;
        predictablePBEPasswordABICase1_0.go(charArray62);
        char[] charArray64 = null;
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass66 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray9 = new char[] { '4' };
        predictablePBEPasswordABICase1_7.go(charArray9);
        predictablePBEPasswordABICase1_6.go(charArray9);
        char[] charArray12 = null;
        predictablePBEPasswordABICase1_6.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        predictablePBEPasswordABICase1_6.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray49 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_38.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        predictablePBEPasswordABICase1_51.go(charArray58);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        predictablePBEPasswordABICase1_62.go(charArray69);
        predictablePBEPasswordABICase1_51.go(charArray69);
        predictablePBEPasswordABICase1_38.go(charArray69);
        predictablePBEPasswordABICase1_6.go(charArray69);
        predictablePBEPasswordABICase1_0.go(charArray69);
        java.lang.Class<?> wildcardClass77 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray15 = new char[] { '4' };
        predictablePBEPasswordABICase1_13.go(charArray15);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        predictablePBEPasswordABICase1_17.go(charArray20);
        predictablePBEPasswordABICase1_13.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        predictablePBEPasswordABICase1_28.go(charArray31);
        predictablePBEPasswordABICase1_24.go(charArray31);
        predictablePBEPasswordABICase1_13.go(charArray31);
        char[] charArray42 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_13.go(charArray42);
        char[] charArray47 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_13.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_49.go(charArray55);
        char[] charArray61 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_49.go(charArray61);
        predictablePBEPasswordABICase1_13.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_64 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray67 = new char[] { '4' };
        predictablePBEPasswordABICase1_65.go(charArray67);
        predictablePBEPasswordABICase1_64.go(charArray67);
        char[] charArray70 = null;
        predictablePBEPasswordABICase1_64.go(charArray70);
        char[] charArray72 = null;
        predictablePBEPasswordABICase1_64.go(charArray72);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_74 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_75 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray77 = new char[] { '4' };
        predictablePBEPasswordABICase1_75.go(charArray77);
        predictablePBEPasswordABICase1_74.go(charArray77);
        char[] charArray85 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_74.go(charArray85);
        predictablePBEPasswordABICase1_64.go(charArray85);
        predictablePBEPasswordABICase1_13.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        char[] charArray90 = null;
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass92 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray12 = new char[] { '4' };
        predictablePBEPasswordABICase1_10.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray17 = new char[] { '4' };
        predictablePBEPasswordABICase1_15.go(charArray17);
        predictablePBEPasswordABICase1_14.go(charArray17);
        predictablePBEPasswordABICase1_10.go(charArray17);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        predictablePBEPasswordABICase1_10.go(charArray28);
        char[] charArray39 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray39);
        predictablePBEPasswordABICase1_0.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray48 = null;
        predictablePBEPasswordABICase1_42.go(charArray48);
        char[] charArray54 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_42.go(charArray54);
        predictablePBEPasswordABICase1_0.go(charArray54);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_0.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        java.lang.Class<?> wildcardClass68 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray1 = null;
        predictablePBEPasswordABICase1_0.go(charArray1);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_3 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray5 = new char[] { '4' };
        predictablePBEPasswordABICase1_3.go(charArray5);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_7 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_8 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray10 = new char[] { '4' };
        predictablePBEPasswordABICase1_8.go(charArray10);
        predictablePBEPasswordABICase1_7.go(charArray10);
        predictablePBEPasswordABICase1_3.go(charArray10);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        predictablePBEPasswordABICase1_3.go(charArray21);
        char[] charArray32 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_3.go(charArray32);
        predictablePBEPasswordABICase1_0.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        predictablePBEPasswordABICase1_36.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_52 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray54 = new char[] { '4' };
        predictablePBEPasswordABICase1_52.go(charArray54);
        predictablePBEPasswordABICase1_51.go(charArray54);
        predictablePBEPasswordABICase1_47.go(charArray54);
        predictablePBEPasswordABICase1_36.go(charArray54);
        char[] charArray65 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_36.go(charArray65);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        predictablePBEPasswordABICase1_67.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_78 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray80 = new char[] { '4' };
        predictablePBEPasswordABICase1_78.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        predictablePBEPasswordABICase1_78.go(charArray85);
        predictablePBEPasswordABICase1_67.go(charArray85);
        predictablePBEPasswordABICase1_36.go(charArray85);
        predictablePBEPasswordABICase1_35.go(charArray85);
        predictablePBEPasswordABICase1_0.go(charArray85);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_93 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray95 = new char[] { '4' };
        predictablePBEPasswordABICase1_93.go(charArray95);
        predictablePBEPasswordABICase1_0.go(charArray95);
        java.lang.Class<?> wildcardClass98 = charArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray16 = null;
        predictablePBEPasswordABICase1_10.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray20 = new char[] { '4' };
        predictablePBEPasswordABICase1_18.go(charArray20);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray25 = new char[] { '4' };
        predictablePBEPasswordABICase1_23.go(charArray25);
        predictablePBEPasswordABICase1_22.go(charArray25);
        predictablePBEPasswordABICase1_18.go(charArray25);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray31 = new char[] { '4' };
        predictablePBEPasswordABICase1_29.go(charArray31);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        predictablePBEPasswordABICase1_33.go(charArray36);
        predictablePBEPasswordABICase1_29.go(charArray36);
        predictablePBEPasswordABICase1_18.go(charArray36);
        predictablePBEPasswordABICase1_10.go(charArray36);
        predictablePBEPasswordABICase1_0.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_48 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray50 = new char[] { '4' };
        predictablePBEPasswordABICase1_48.go(charArray50);
        predictablePBEPasswordABICase1_47.go(charArray50);
        predictablePBEPasswordABICase1_43.go(charArray50);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray56 = new char[] { '4' };
        predictablePBEPasswordABICase1_54.go(charArray56);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        predictablePBEPasswordABICase1_54.go(charArray61);
        predictablePBEPasswordABICase1_43.go(charArray61);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_67 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray69 = new char[] { '4' };
        predictablePBEPasswordABICase1_67.go(charArray69);
        predictablePBEPasswordABICase1_66.go(charArray69);
        char[] charArray77 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_66.go(charArray77);
        predictablePBEPasswordABICase1_43.go(charArray77);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_80 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray83 = new char[] { '4' };
        predictablePBEPasswordABICase1_81.go(charArray83);
        predictablePBEPasswordABICase1_80.go(charArray83);
        char[] charArray91 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_80.go(charArray91);
        predictablePBEPasswordABICase1_43.go(charArray91);
        predictablePBEPasswordABICase1_0.go(charArray91);
        java.lang.Class<?> wildcardClass95 = charArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_61.go(charArray67);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_61.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_61.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass86 = charArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        char[] charArray74 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_17.go(charArray74);
        predictablePBEPasswordABICase1_11.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        char[] charArray84 = new char[] { 'a', '#', 'a', 'a', '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        char[] charArray34 = new char[] { '#', 'a', '4' };
        predictablePBEPasswordABICase1_0.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_43 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray45 = new char[] { '4' };
        predictablePBEPasswordABICase1_43.go(charArray45);
        predictablePBEPasswordABICase1_42.go(charArray45);
        char[] charArray53 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_42.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_60 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray62 = new char[] { '4' };
        predictablePBEPasswordABICase1_60.go(charArray62);
        predictablePBEPasswordABICase1_59.go(charArray62);
        predictablePBEPasswordABICase1_55.go(charArray62);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        predictablePBEPasswordABICase1_55.go(charArray73);
        predictablePBEPasswordABICase1_42.go(charArray73);
        predictablePBEPasswordABICase1_36.go(charArray73);
        char[] charArray80 = null;
        predictablePBEPasswordABICase1_36.go(charArray80);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray85 = new char[] { '4' };
        predictablePBEPasswordABICase1_83.go(charArray85);
        predictablePBEPasswordABICase1_82.go(charArray85);
        char[] charArray88 = null;
        predictablePBEPasswordABICase1_82.go(charArray88);
        char[] charArray94 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_82.go(charArray94);
        predictablePBEPasswordABICase1_36.go(charArray94);
        predictablePBEPasswordABICase1_0.go(charArray94);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        char[] charArray11 = null;
        predictablePBEPasswordABICase1_0.go(charArray11);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_13 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        predictablePBEPasswordABICase1_13.go(charArray16);
        char[] charArray19 = null;
        predictablePBEPasswordABICase1_13.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray23 = new char[] { '4' };
        predictablePBEPasswordABICase1_21.go(charArray23);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_26 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray28 = new char[] { '4' };
        predictablePBEPasswordABICase1_26.go(charArray28);
        predictablePBEPasswordABICase1_25.go(charArray28);
        predictablePBEPasswordABICase1_21.go(charArray28);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray34 = new char[] { '4' };
        predictablePBEPasswordABICase1_32.go(charArray34);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_37 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray39 = new char[] { '4' };
        predictablePBEPasswordABICase1_37.go(charArray39);
        predictablePBEPasswordABICase1_36.go(charArray39);
        predictablePBEPasswordABICase1_32.go(charArray39);
        predictablePBEPasswordABICase1_21.go(charArray39);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_44 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        predictablePBEPasswordABICase1_44.go(charArray47);
        char[] charArray55 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_44.go(charArray55);
        predictablePBEPasswordABICase1_21.go(charArray55);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_58 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_59 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray61 = new char[] { '4' };
        predictablePBEPasswordABICase1_59.go(charArray61);
        predictablePBEPasswordABICase1_58.go(charArray61);
        char[] charArray69 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_58.go(charArray69);
        predictablePBEPasswordABICase1_21.go(charArray69);
        char[] charArray78 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_21.go(charArray78);
        predictablePBEPasswordABICase1_13.go(charArray78);
        predictablePBEPasswordABICase1_0.go(charArray78);
        char[] charArray88 = new char[] { '4', '4', 'a', ' ', '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray88);
        java.lang.Class<?> wildcardClass90 = charArray88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_6 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray8 = new char[] { '4' };
        predictablePBEPasswordABICase1_6.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        predictablePBEPasswordABICase1_6.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        predictablePBEPasswordABICase1_6.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        char[] charArray35 = null;
        predictablePBEPasswordABICase1_29.go(charArray35);
        char[] charArray41 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_29.go(charArray41);
        predictablePBEPasswordABICase1_6.go(charArray41);
        predictablePBEPasswordABICase1_0.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        char[] charArray57 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_46.go(charArray57);
        char[] charArray59 = null;
        predictablePBEPasswordABICase1_46.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray63 = new char[] { '4' };
        predictablePBEPasswordABICase1_61.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_65 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        predictablePBEPasswordABICase1_65.go(charArray68);
        predictablePBEPasswordABICase1_61.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_76 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        predictablePBEPasswordABICase1_76.go(charArray79);
        predictablePBEPasswordABICase1_72.go(charArray79);
        predictablePBEPasswordABICase1_61.go(charArray79);
        char[] charArray90 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_61.go(charArray90);
        predictablePBEPasswordABICase1_46.go(charArray90);
        predictablePBEPasswordABICase1_45.go(charArray90);
        predictablePBEPasswordABICase1_0.go(charArray90);
        java.lang.Class<?> wildcardClass95 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_12 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray14 = new char[] { '4' };
        predictablePBEPasswordABICase1_12.go(charArray14);
        predictablePBEPasswordABICase1_11.go(charArray14);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_17 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray19 = new char[] { '4' };
        predictablePBEPasswordABICase1_17.go(charArray19);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_21 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_22 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray24 = new char[] { '4' };
        predictablePBEPasswordABICase1_22.go(charArray24);
        predictablePBEPasswordABICase1_21.go(charArray24);
        predictablePBEPasswordABICase1_17.go(charArray24);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_28 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray30 = new char[] { '4' };
        predictablePBEPasswordABICase1_28.go(charArray30);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_32 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_33 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray35 = new char[] { '4' };
        predictablePBEPasswordABICase1_33.go(charArray35);
        predictablePBEPasswordABICase1_32.go(charArray35);
        predictablePBEPasswordABICase1_28.go(charArray35);
        predictablePBEPasswordABICase1_17.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_40 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_41 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray43 = new char[] { '4' };
        predictablePBEPasswordABICase1_41.go(charArray43);
        predictablePBEPasswordABICase1_40.go(charArray43);
        char[] charArray51 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_40.go(charArray51);
        predictablePBEPasswordABICase1_17.go(charArray51);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_54 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray57 = new char[] { '4' };
        predictablePBEPasswordABICase1_55.go(charArray57);
        predictablePBEPasswordABICase1_54.go(charArray57);
        char[] charArray65 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_54.go(charArray65);
        predictablePBEPasswordABICase1_17.go(charArray65);
        char[] charArray74 = new char[] { '#', '4', '#', ' ', ' ', 'a' };
        predictablePBEPasswordABICase1_17.go(charArray74);
        predictablePBEPasswordABICase1_11.go(charArray74);
        predictablePBEPasswordABICase1_0.go(charArray74);
        char[] charArray84 = new char[] { 'a', '#', 'a', 'a', '4', ' ' };
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass86 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        char[] charArray55 = null;
        predictablePBEPasswordABICase1_0.go(charArray55);
        char[] charArray57 = null;
        predictablePBEPasswordABICase1_0.go(charArray57);
        java.lang.Class<?> wildcardClass59 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray8 = null;
        predictablePBEPasswordABICase1_0.go(charArray8);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_10 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        predictablePBEPasswordABICase1_10.go(charArray13);
        char[] charArray21 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_10.go(charArray21);
        predictablePBEPasswordABICase1_0.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        predictablePBEPasswordABICase1_24.go(charArray27);
        char[] charArray30 = null;
        predictablePBEPasswordABICase1_24.go(charArray30);
        char[] charArray32 = null;
        predictablePBEPasswordABICase1_24.go(charArray32);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_34 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray36 = new char[] { '4' };
        predictablePBEPasswordABICase1_34.go(charArray36);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        predictablePBEPasswordABICase1_34.go(charArray41);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray47 = new char[] { '4' };
        predictablePBEPasswordABICase1_45.go(charArray47);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_49 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray52 = new char[] { '4' };
        predictablePBEPasswordABICase1_50.go(charArray52);
        predictablePBEPasswordABICase1_49.go(charArray52);
        predictablePBEPasswordABICase1_45.go(charArray52);
        predictablePBEPasswordABICase1_34.go(charArray52);
        char[] charArray63 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_34.go(charArray63);
        predictablePBEPasswordABICase1_24.go(charArray63);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_66 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray68 = new char[] { '4' };
        predictablePBEPasswordABICase1_66.go(charArray68);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_70 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray73 = new char[] { '4' };
        predictablePBEPasswordABICase1_71.go(charArray73);
        predictablePBEPasswordABICase1_70.go(charArray73);
        predictablePBEPasswordABICase1_66.go(charArray73);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_77 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray79 = new char[] { '4' };
        predictablePBEPasswordABICase1_77.go(charArray79);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_81 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_82 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray84 = new char[] { '4' };
        predictablePBEPasswordABICase1_82.go(charArray84);
        predictablePBEPasswordABICase1_81.go(charArray84);
        predictablePBEPasswordABICase1_77.go(charArray84);
        predictablePBEPasswordABICase1_66.go(charArray84);
        predictablePBEPasswordABICase1_24.go(charArray84);
        predictablePBEPasswordABICase1_0.go(charArray84);
        java.lang.Class<?> wildcardClass91 = charArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        char[] charArray29 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_0.go(charArray29);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_31 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray33 = new char[] { '4' };
        predictablePBEPasswordABICase1_31.go(charArray33);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_35 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_36 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray38 = new char[] { '4' };
        predictablePBEPasswordABICase1_36.go(charArray38);
        predictablePBEPasswordABICase1_35.go(charArray38);
        predictablePBEPasswordABICase1_31.go(charArray38);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_42 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray44 = new char[] { '4' };
        predictablePBEPasswordABICase1_42.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_47 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray49 = new char[] { '4' };
        predictablePBEPasswordABICase1_47.go(charArray49);
        predictablePBEPasswordABICase1_46.go(charArray49);
        predictablePBEPasswordABICase1_42.go(charArray49);
        predictablePBEPasswordABICase1_31.go(charArray49);
        predictablePBEPasswordABICase1_0.go(charArray49);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_55 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_56 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray58 = new char[] { '4' };
        predictablePBEPasswordABICase1_56.go(charArray58);
        predictablePBEPasswordABICase1_55.go(charArray58);
        char[] charArray66 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_55.go(charArray66);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_68 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray70 = new char[] { '4' };
        predictablePBEPasswordABICase1_68.go(charArray70);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_73 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray75 = new char[] { '4' };
        predictablePBEPasswordABICase1_73.go(charArray75);
        predictablePBEPasswordABICase1_72.go(charArray75);
        predictablePBEPasswordABICase1_68.go(charArray75);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_79 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray81 = new char[] { '4' };
        predictablePBEPasswordABICase1_79.go(charArray81);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_83 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_84 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray86 = new char[] { '4' };
        predictablePBEPasswordABICase1_84.go(charArray86);
        predictablePBEPasswordABICase1_83.go(charArray86);
        predictablePBEPasswordABICase1_79.go(charArray86);
        predictablePBEPasswordABICase1_68.go(charArray86);
        predictablePBEPasswordABICase1_55.go(charArray86);
        predictablePBEPasswordABICase1_0.go(charArray86);
        char[] charArray93 = null;
        predictablePBEPasswordABICase1_0.go(charArray93);
        char[] charArray96 = new char[] { 'a' };
        predictablePBEPasswordABICase1_0.go(charArray96);
        java.lang.Class<?> wildcardClass98 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_1 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray3 = new char[] { '4' };
        predictablePBEPasswordABICase1_1.go(charArray3);
        predictablePBEPasswordABICase1_0.go(charArray3);
        char[] charArray6 = null;
        predictablePBEPasswordABICase1_0.go(charArray6);
        char[] charArray12 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_0.go(charArray12);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_14 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray16 = new char[] { '4' };
        predictablePBEPasswordABICase1_14.go(charArray16);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_18 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_19 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray21 = new char[] { '4' };
        predictablePBEPasswordABICase1_19.go(charArray21);
        predictablePBEPasswordABICase1_18.go(charArray21);
        predictablePBEPasswordABICase1_14.go(charArray21);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_25 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray27 = new char[] { '4' };
        predictablePBEPasswordABICase1_25.go(charArray27);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_29 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_30 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray32 = new char[] { '4' };
        predictablePBEPasswordABICase1_30.go(charArray32);
        predictablePBEPasswordABICase1_29.go(charArray32);
        predictablePBEPasswordABICase1_25.go(charArray32);
        predictablePBEPasswordABICase1_14.go(charArray32);
        char[] charArray43 = new char[] { ' ', ' ', ' ', '#', '4', '#' };
        predictablePBEPasswordABICase1_14.go(charArray43);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_45 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        predictablePBEPasswordABICase1_45.go(charArray48);
        char[] charArray51 = null;
        predictablePBEPasswordABICase1_45.go(charArray51);
        char[] charArray57 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_45.go(charArray57);
        predictablePBEPasswordABICase1_14.go(charArray57);
        predictablePBEPasswordABICase1_0.go(charArray57);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        char[] charArray67 = null;
        predictablePBEPasswordABICase1_61.go(charArray67);
        char[] charArray69 = null;
        predictablePBEPasswordABICase1_61.go(charArray69);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_71 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_72 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray74 = new char[] { '4' };
        predictablePBEPasswordABICase1_72.go(charArray74);
        predictablePBEPasswordABICase1_71.go(charArray74);
        char[] charArray82 = new char[] { '4', '#', 'a', '4', '#' };
        predictablePBEPasswordABICase1_71.go(charArray82);
        predictablePBEPasswordABICase1_61.go(charArray82);
        predictablePBEPasswordABICase1_0.go(charArray82);
        java.lang.Class<?> wildcardClass86 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_0 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray2 = new char[] { '4' };
        predictablePBEPasswordABICase1_0.go(charArray2);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_4 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_5 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray7 = new char[] { '4' };
        predictablePBEPasswordABICase1_5.go(charArray7);
        predictablePBEPasswordABICase1_4.go(charArray7);
        predictablePBEPasswordABICase1_0.go(charArray7);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_11 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray13 = new char[] { '4' };
        predictablePBEPasswordABICase1_11.go(charArray13);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_15 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_16 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray18 = new char[] { '4' };
        predictablePBEPasswordABICase1_16.go(charArray18);
        predictablePBEPasswordABICase1_15.go(charArray18);
        predictablePBEPasswordABICase1_11.go(charArray18);
        predictablePBEPasswordABICase1_0.go(charArray18);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_23 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_24 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray26 = new char[] { '4' };
        predictablePBEPasswordABICase1_24.go(charArray26);
        predictablePBEPasswordABICase1_23.go(charArray26);
        char[] charArray29 = null;
        predictablePBEPasswordABICase1_23.go(charArray29);
        char[] charArray35 = new char[] { 'a', '#', '#', '#' };
        predictablePBEPasswordABICase1_23.go(charArray35);
        predictablePBEPasswordABICase1_0.go(charArray35);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_38 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_39 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray41 = new char[] { '4' };
        predictablePBEPasswordABICase1_39.go(charArray41);
        predictablePBEPasswordABICase1_38.go(charArray41);
        char[] charArray44 = null;
        predictablePBEPasswordABICase1_38.go(charArray44);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_46 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray48 = new char[] { '4' };
        predictablePBEPasswordABICase1_46.go(charArray48);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_50 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_51 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray53 = new char[] { '4' };
        predictablePBEPasswordABICase1_51.go(charArray53);
        predictablePBEPasswordABICase1_50.go(charArray53);
        predictablePBEPasswordABICase1_46.go(charArray53);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_57 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray59 = new char[] { '4' };
        predictablePBEPasswordABICase1_57.go(charArray59);
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_61 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1 predictablePBEPasswordABICase1_62 = new org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1();
        char[] charArray64 = new char[] { '4' };
        predictablePBEPasswordABICase1_62.go(charArray64);
        predictablePBEPasswordABICase1_61.go(charArray64);
        predictablePBEPasswordABICase1_57.go(charArray64);
        predictablePBEPasswordABICase1_46.go(charArray64);
        predictablePBEPasswordABICase1_38.go(charArray64);
        predictablePBEPasswordABICase1_0.go(charArray64);
        char[] charArray71 = null;
        predictablePBEPasswordABICase1_0.go(charArray71);
        java.lang.Class<?> wildcardClass73 = predictablePBEPasswordABICase1_0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(charArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }
}

